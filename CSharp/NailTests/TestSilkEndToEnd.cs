using Concentus.Common;
using Concentus.Common.CPlusPlus;
using Concentus.Silk;
using Concentus.Silk.Structs;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NailTests
{
    [TestClass]
    public class TestSilkEndToEnd
    {
        [TestMethod]
        public void Test20MsSample()
        {
            short[] samples = { 4522, 4188, 2984, 3264, 4813, 5527,
                4007, 1472, -522, -1561, -1794, -1466,
                -693, 51, -463, -2173, -3494, -3394,
                -2548, -2024, -1871, -1615, -789, 775,
                2233, 3624, 4811, 4779, 3149, 447,
                -2112, -3456, -3967, -4589, -5189, -5017,
                -3443, -1140, 2331, 7637, 14121, 18202,
                17864, 13800, 9378, 6530, 3893, -516,
                -5096, -7583, -8249, -8551, -9340, -9202,
                -7535, -5734, -6061, -7597, -7657, -5131,
                -1916, 827, 3005, 5416, 6830, 6346,
                4075, 1700, -153, -2363, -5717, -8960,
                -10241, -9042, -6776, -5145, -4357, -3989,
                -3378, -3279, -3244, -2446, -849, 594,
                966, 987, 2420, 5570, 8435, 7951,
                3851, -1199, -4880, -6659, -7930, -8861,
                -8346, -6352, -4052, -2203, -613, 2198,
                5243, 6500, 5103, 3217, 2739, 3710,
                4557, 5240, 6488, 7824, 7279, 3973,
                -29, -2077, -2067, -2212, -3784, -4775,
                -3326, -813, 1011, 2330, 4173, 5691,
                5170, 2250, -122, 404, 3291, 5317,
                5424, 4605, 3947, 3482, 2225, 144,
                -1785, -3698, -5939, -8105, -8694, -6921,
                -3585, -1046, -414, -592, -474, 48,
                160, -443, -1062, -1497, -2569, -3673,
                -3719, -1914, 182, 1022, 323, -278,
                107, 1880, 5243, 10568, 15963, 18443,
                16906, 13103, 9739, 7637, 5146, 1263,
                -2634, -5080, -6271, -7124, -7497, -6658,
                -4810, -4290, -5904, -7622, -7085, -4787,
                -1736, 728, 3147, 5250, 5440, 3530,
                1292, -159, -1360, -3432, -6204, -7735,
                -6945, -4601, -2837, -2406, -2749, -3301,
                -3989, -4400, -3646, -1271, 1492, 2955,
                2965, 2946, 4351, 6722, 7293, 4309,
                -1040, -5803, -8091, -8338, -7903, -7222,
                -5677, -4184, -3794, -4204, -3711, -1560,
                743, 1365, 516, 619, 2847, 6309,
                9005, 10165, 9789, 7683, 3535, -1041,
                -3639, -3194, -1698, -1685, -2928, -2872,
                -1225, 298, 465, 482, 763, 608,
                -868, -2149, -921, 3137, 7242, 8863,
                7700, 5319, 2818, 412, -1870, -3515,
                -4275, -4825, -5599, -5753, -3922, -653,
                1958, 2086, 33, -1863, -2341, -1822,
                -1357, -939, -166, 284, -298, -1083,
                -792, 477, 875, -546, -1879, -645,
                4076, 10008, 15052, 17353, 16914, 14356,
                11391, 8363, 5843, 3576, 1587, -524,
                -2559, -4184, -4784, -4836, -4676, -5762,
                -7611, -8805, -7796, -5140, -1781, 871,
                2568, 3593, 3564, 2127, -234, -1920,
                -2336, -2815, 0, 0, 0, 0};

            silk_encoder encoder = new silk_encoder();
            encoder.nChannelsAPI = 1;

            silk_EncControlStruct encodeControl = new silk_EncControlStruct();
            encodeControl.Reset();

            int error = enc_API.silk_InitEncoder(encoder, 0, encodeControl);

            encodeControl.nChannelsAPI = 1;
            encodeControl.nChannelsInternal = 1;
            encodeControl.API_sampleRate = 16000;
            encodeControl.maxInternalSampleRate = 16000;
            encodeControl.minInternalSampleRate = 8000;
            encodeControl.desiredInternalSampleRate = 16000;
            encodeControl.payloadSize_ms = 20;
            encodeControl.bitRate = 25000;
            encodeControl.complexity = 9;
            encodeControl.useCBR = 1;
            encodeControl.maxBits = 8000;

            Pointer<byte> outbuf = Pointer.Malloc<byte>(1000);

            ec_ctx entropyCoder = new ec_ctx();
            entropyCoder.Reset();
            EntropyCoder.ec_enc_init(entropyCoder, outbuf, 1000);

            BoxedValue<int> bytesOut = new BoxedValue<int>(encodeControl.maxBits / 8);
            error = enc_API.silk_Encode(encoder, encodeControl, samples.GetPointer(), 320, entropyCoder, bytesOut, 0);

            Assert.AreEqual(0, error);
            Assert.AreEqual(263, bytesOut.Val);
            byte[] expected_outbuf = { 0x80, 0x9, 0x0, 0xa1, 0x6a, 0xeb, 0xe3, 0xfb, 0x7d, 0x4e, 0xeb, 0xec, 0xf6, 0xea, 0xe4, 0xb2, 0x9f, 0xff, 0x81, 0x36, 0xbf, 0xff, 0xc4, 0x91, 0xaf, 0xff, 0xf3, 0x9e, 0x5f, 0xff, 0xfc, 0x21, 0x7f, 0xff, 0xfe, 0xca, 0x77, 0xff, 0xff, 0x9f, 0x45, 0x7f, 0xff, 0xd2, 0xa8, 0x9f, 0xff, 0xf1, 0xd4, 0xb7, 0xff, 0xfb, 0x92, 0x7d, 0xff, 0xff, 0x13, 0xda, 0x3f, 0xff, 0xb6, 0x34, 0x3f, 0xff, 0xe8, 0xf0, 0x5f, 0xff, 0xf5, 0x30, 0xaf, 0xff, 0xf9, 0xcb, 0x43, 0x20, 0xf4, 0x50, 0x28, 0xcf, 0xf1, 0x66, 0x18, 0x77, 0xd3, 0x2d, 0x36, 0xf8, 0x11, 0xa3, 0xd6, 0x88, 0xf9, 0x4b, 0x45, 0x12, 0x6c, 0x63, 0x31, 0x54, 0xf0, 0x2e, 0xba, 0xf1, 0x2a, 0x3c, 0x0, 0x2, 0x9d, 0xc7, 0x1e, 0xca, 0x21, 0x29, 0x57, 0x16, 0x6e, 0xb7, 0x4a, 0xec, 0x26, 0xbd, 0x9e, 0xf2, 0xc1, 0xa5, 0xad, 0x80, 0xb1, 0xfd, 0xde, 0xea, 0xb2, 0xb5, 0xc1, 0x79, 0xcf, 0x60, 0x52, 0x1, 0x85, 0x8c, 0x5d, 0x92, 0xc7, 0xe2, 0xb1, 0xa7, 0x74, 0x6c, 0x5, 0xd5, 0x4d, 0x66, 0xc9, 0x86, 0x34, 0x5d, 0xbc, 0x69, 0x25, 0x7d, 0x27, 0xf5, 0xb5, 0xd1, 0x4, 0x8c, 0xd2, 0xf9, 0x6a, 0x7, 0x6f, 0x4e, 0xd2, 0xb8, 0x17, 0xde, 0xfb, 0x15, 0x2f, 0xcb, 0xd7, 0x2, 0x50, 0x9, 0xbf, 0xce, 0xbd, 0x6a, 0xf5, 0x67, 0x68, 0x51, 0xb9, 0x3c, 0xa5, 0x39, 0x19, 0xd4, 0x52, 0x3e, 0x3a, 0xb, 0xba, 0x2, 0xf5, 0x84, 0x2, 0xe0, 0xed, 0x2e, 0xb0, 0xd4, 0x11, 0x9e, 0x63, 0xc, 0xff, 0xba, 0xba, 0xe5, 0x11, 0x5a, 0x6, 0x74, 0x97, 0x7e, 0x99, 0xe8, 0x4c, 0xf0, 0x50, 0xd9, 0xcc, 0x26, 0xcf, 0xb4, 0x7c, 0x54, 0x57, 0xd2, 0xb9, 0x6a, 0x3c, 0x95, 0x11, 0x89, 0x20, 0x68, 0x0, 0xf5, 0xcc, 0xe9, 0xfd, 0xf, 0xb4, 0xac, 0x43, 0x71, 0xdb, 0x0, 0x0, };
            Helpers.AssertArrayDataEquals(expected_outbuf, outbuf);

            // Now decode that frame again
            EntropyCoder.ec_enc_done(entropyCoder);

            silk_decoder decoder = new silk_decoder();
            decoder.nChannelsAPI = 1;

            silk_DecControlStruct decodeControl = new silk_DecControlStruct();
            decodeControl.Reset();

            error = dec_API.silk_InitDecoder(decoder);
            decodeControl.nChannelsAPI = 1;
            decodeControl.nChannelsInternal = 1;
            decodeControl.internalSampleRate = 16000;
            decodeControl.API_sampleRate = 16000;
            decodeControl.payloadSize_ms = 20;

            ec_ctx entropyDecoder = new ec_ctx();
            entropyDecoder.Reset();
            EntropyCoder.ec_dec_init(entropyDecoder, outbuf, 1000);

            Pointer<short> samplesOut = Pointer.Malloc<short>(1000);
            BoxedValue<int> nSamplesOut = new BoxedValue<int>(0);

            dec_API.silk_Decode(decoder, decodeControl, 0, 1, entropyDecoder, samplesOut, nSamplesOut, 0);
            Assert.AreEqual(320, nSamplesOut.Val);
            short[] expected_samplesOut = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, -1, 0, -1, -1, -2, -2, -2, -1, 0, 0, 1, 0, -1, -1, -1, 1, 2, 3, 3, 3, 1, 0, 0, -1, -2, -4, -5, -5, -4, -4, -2, 0, 1, 1, 1, 0, 0, -1, -1, -1, 1, 2, 2, 1, 0, -1, 0, 3, 4, 4, 3, 1, 0, 0, 0, 0, 0, -2, -2, -3, -3, -2, -3, -3, -3, -3, -2, 0, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 53, 75, 107, 182, 323, 498, 616, 574, 372, 182, 117, 184, 301, 414, 425, 279, -9, -269, -432, -534, -646, -738, -708, -501, -162, 222, 585, 887, 976, 787, 407, 31, -222, -393, -568, -748, -765, -563, -230, 92, 346, 548, 675, 693, 646, 663, 806, 892, 755, 513, 390, 365, 254, -55, -451, -785, -1051, -1307, -1511, -1548, -1408, -1139, -825, -444, -52, 244, 337, 244, 96, 11, -10, -34, -77, -107, -118, -154, -253, -381, -497, -616, -777, -957, -1063, -1033, -905, -765, -575, -287, 77, 344, 412, 338, 237, 145, 17, -143, -269, -320, -350, -430, -538, -529, -366, -229, -264, -354, -310, -90, 168, 367, 548, 757, 898, 825, 576, 389, 380, 360, 141, -144, -246, -193, -128, -135, -103, 45, 170, 85, -92, -110, 110, 374, 486, 508, 607, 783, 883, 769, 525, 278, 18, -330, -706, -869, -719, -498, -459, -559, -608, -543, -503, -577, -660, -628, -524, -473, -473, -312, 10, 273, 270, 142, 144, 330, 520, 583, 604, 688, 783, 765, 650, 593, 641, 644, 479, 245, 65, -50, -149, -245, -251, -207, -227, -380, -568, -655, -552, -340, -122, 89, 250, 321, 267, 137, 23, -54, -157, -330, -516, -598, -564, -501, -490, -524, -567, -620, -696, -685, -567, -397, -284, -197, -35, 242, 483, 548 };
            Helpers.AssertArrayDataEquals(expected_samplesOut, samplesOut);
        }

        [TestMethod]
        public void Test_silk_encode_frame_internal_16()
        {
            #region autogen
            silk_encoder_state_fix through_psEnc = new silk_encoder_state_fix();
            through_psEnc.sCmn = new silk_encoder_state();
            through_psEnc.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.variable_HP_smth1_Q15 = 193536;
            through_psEnc.sCmn.variable_HP_smth2_Q15 = 193536;
            through_psEnc.sCmn.sLP = new silk_LP_state();
            through_psEnc.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.sLP.transition_frame_no = 0;
            through_psEnc.sCmn.sLP.mode = 0;
            through_psEnc.sCmn.sVAD = new silk_VAD_state();
            through_psEnc.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            through_psEnc.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            through_psEnc.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            through_psEnc.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            through_psEnc.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            through_psEnc.sCmn.sVAD.HPstate = -12;
            through_psEnc.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            through_psEnc.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            through_psEnc.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            through_psEnc.sCmn.sVAD.counter = 17;
            through_psEnc.sCmn.sNSQ = new silk_nsq_state();
            through_psEnc.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            through_psEnc.sCmn.sNSQ.lagPrev = 100;
            through_psEnc.sCmn.sNSQ.sLTP_buf_idx = 0;
            through_psEnc.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            through_psEnc.sCmn.sNSQ.rand_seed = 0;
            through_psEnc.sCmn.sNSQ.prev_gain_Q16 = 65536;
            through_psEnc.sCmn.sNSQ.rewhite_flag = 0;
            through_psEnc.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.speech_activity_Q8 = 255;
            through_psEnc.sCmn.allow_bandwidth_switch = 0;
            through_psEnc.sCmn.LBRRprevLastGainIndex = 0;
            through_psEnc.sCmn.prevSignalType = 0;
            through_psEnc.sCmn.prevLag = 100;
            through_psEnc.sCmn.pitch_LPC_win_length = 192;
            through_psEnc.sCmn.max_pitch_lag = 144;
            through_psEnc.sCmn.API_fs_Hz = 48000;
            through_psEnc.sCmn.prev_API_fs_Hz = 48000;
            through_psEnc.sCmn.maxInternal_fs_Hz = 16000;
            through_psEnc.sCmn.minInternal_fs_Hz = 8000;
            through_psEnc.sCmn.desiredInternal_fs_Hz = 8000;
            through_psEnc.sCmn.fs_kHz = 8;
            through_psEnc.sCmn.nb_subfr = 4;
            through_psEnc.sCmn.frame_length = 160;
            through_psEnc.sCmn.subfr_length = 40;
            through_psEnc.sCmn.ltp_mem_length = 160;
            through_psEnc.sCmn.la_pitch = 16;
            through_psEnc.sCmn.la_shape = 40;
            through_psEnc.sCmn.shapeWinLength = 120;
            through_psEnc.sCmn.TargetRate_bps = 7100;
            through_psEnc.sCmn.PacketSize_ms = 40;
            through_psEnc.sCmn.PacketLoss_perc = 8;
            through_psEnc.sCmn.frameCounter = 2;
            through_psEnc.sCmn.Complexity = 10;
            through_psEnc.sCmn.nStatesDelayedDecision = 4;
            through_psEnc.sCmn.useInterpolatedNLSFs = 1;
            through_psEnc.sCmn.shapingLPCOrder = 16;
            through_psEnc.sCmn.predictLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationComplexity = 2;
            through_psEnc.sCmn.pitchEstimationLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationThreshold_Q16 = 45875;
            through_psEnc.sCmn.LTPQuantLowComplexity = 0;
            through_psEnc.sCmn.mu_LTP_Q9 = 15;
            through_psEnc.sCmn.sum_log_gain_Q7 = 0;
            through_psEnc.sCmn.NLSF_MSVQ_Survivors = 32;
            through_psEnc.sCmn.first_frame_after_reset = 1;
            through_psEnc.sCmn.controlled_since_last_payload = 1;
            through_psEnc.sCmn.warping_Q16 = 7864;
            through_psEnc.sCmn.useCBR = 0;
            through_psEnc.sCmn.prefillFlag = 0;
            through_psEnc.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            through_psEnc.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            through_psEnc.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            through_psEnc.sCmn.psNLSF_CB.nVectors = 32;
            through_psEnc.sCmn.psNLSF_CB.order = 10;
            through_psEnc.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            through_psEnc.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            through_psEnc.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            through_psEnc.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            through_psEnc.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            through_psEnc.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            through_psEnc.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            through_psEnc.sCmn.input_tilt_Q15 = 26560;
            through_psEnc.sCmn.SNR_dB_Q7 = 1768;
            through_psEnc.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            through_psEnc.sCmn.LBRR_flag = 0;
            through_psEnc.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            through_psEnc.sCmn.indices = new SideInfoIndices();
            through_psEnc.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.lagIndex = 0;
            through_psEnc.sCmn.indices.contourIndex = 0;
            through_psEnc.sCmn.indices.signalType = 1;
            through_psEnc.sCmn.indices.quantOffsetType = 0;
            through_psEnc.sCmn.indices.NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices.PERIndex = 0;
            through_psEnc.sCmn.indices.LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices.Seed = 1;
            through_psEnc.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.arch = 0;
            through_psEnc.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.inputBufIx = 160;
            through_psEnc.sCmn.nFramesPerPacket = 2;
            through_psEnc.sCmn.nFramesEncoded = 0;
            through_psEnc.sCmn.nChannelsAPI = 2;
            through_psEnc.sCmn.nChannelsInternal = 1;
            through_psEnc.sCmn.channelNb = 0;
            through_psEnc.sCmn.frames_since_onset = 0;
            through_psEnc.sCmn.ec_prevSignalType = 0;
            through_psEnc.sCmn.ec_prevLagIndex = 0;
            through_psEnc.sCmn.useDTX = 0;
            through_psEnc.sCmn.inDTX = 0;
            through_psEnc.sCmn.noSpeechCounter = 0;
            through_psEnc.sCmn.useInBandFEC = 1;
            through_psEnc.sCmn.LBRR_enabled = 0;
            through_psEnc.sCmn.LBRR_GainIncreases = 0;
            through_psEnc.sCmn.indices_LBRR[0] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[0].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[0].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[1] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[1].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[1].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[2] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[2].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[2].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].Seed = 0;
            through_psEnc.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sShape = new silk_shape_state();
            through_psEnc.sShape.LastGainIndex = 10;
            through_psEnc.sShape.HarmBoost_smth_Q16 = 0;
            through_psEnc.sShape.HarmShapeGain_smth_Q16 = 0;
            through_psEnc.sShape.Tilt_smth_Q16 = 0;
            through_psEnc.sPrefilt = new silk_prefilter_state();
            through_psEnc.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0});
            through_psEnc.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0});
            through_psEnc.sPrefilt.sLTP_shp_buf_idx = 0;
            through_psEnc.sPrefilt.sLF_AR_shp_Q12 = 0;
            through_psEnc.sPrefilt.sLF_MA_shp_Q12 = 0;
            through_psEnc.sPrefilt.sHarmHP_Q2 = 0;
            through_psEnc.sPrefilt.rand_seed = 0;
            through_psEnc.sPrefilt.lagPrev = 100;
            through_psEnc.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            through_psEnc.LTPCorr_Q15 = 0;
            silk_encoder_control through_sEncCtrl = new silk_encoder_control();
            through_sEncCtrl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            through_sEncCtrl.LTP_scale_Q14 = -858993460;
            through_sEncCtrl.pitchL = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Lambda_Q10 = -858993460;
            through_sEncCtrl.input_quality_Q14 = -858993460;
            through_sEncCtrl.coding_quality_Q14 = -858993460;
            through_sEncCtrl.sparseness_Q8 = -858993460;
            through_sEncCtrl.predGain_Q16 = -858993460;
            through_sEncCtrl.LTPredCodGain_Q7 = -858993460;
            through_sEncCtrl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.lastGainIndexPrev = -52;
            Pointer<short> in_x_frame = Helpers.WrapWithArrayPointer<short>(
            new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-3072,2,-3072,2,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,25600,0,25600,0,25600,0,25600,
0,0,0,5000,0,2500,0,1600,0,1200,0,-29256,6,7025,13,31457,20,
20097,27,50,0,25,0,16,0,12,0,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            in_x_frame = in_x_frame.Point(500);
            #endregion
            int in_condCoding = 0;
            Pointer<short> res_pitch = Pointer.Malloc<short>(through_psEnc.sCmn.la_pitch + through_psEnc.sCmn.frame_length + through_psEnc.sCmn.ltp_mem_length);
            Pointer<short> res_pitch_frame = res_pitch.Point(through_psEnc.sCmn.ltp_mem_length);
            find_pitch_lags.silk_find_pitch_lags_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            silk_encoder_state_fix expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 10;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 0;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = 0;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 0;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 0;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 100;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            silk_encoder_control expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = -858993460;
            expectedControl.coding_quality_Q14 = -858993460;
            expectedControl.sparseness_Q8 = -858993460;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            noise_shape_analysis.silk_noise_shape_analysis_FIX(through_psEnc, through_sEncCtrl, res_pitch_frame, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 10;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 0;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 0;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 100;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 222303875, 260069788, 69750831, 5169700 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6255,-1966,932,-636,258,-229,106,-158,81,-124,49,-76,50,-71,28,-13,6445,
-1891,917,-569,257,-191,115,-143,102,-130,72,-94,72,-93,51,-54,7430,-1482,
480,-204,56,-1,34,-80,153,-176,151,-153,153,-158,127,-85,4372,2832,702,
-50,-843,565,-1311,920,277,-503,-508,103,706,-588,93,27});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6362,-2036,984,-683,282,-255,121,-182,96,-149,60,-95,64,-91,36,-18,6555,
-1960,968,-611,281,-213,131,-165,121,-156,88,-116,91,-120,67,-72,7553,-1534,
506,-219,61,-2,38,-93,180,-211,184,-190,194,-203,166,-113,4441,2931,740,
-52,-924,632,-1487,1061,327,-601,-619,125,893,-756,121,36});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 539871846, 539871846, 539871846, 539871846 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17193, 17139, 16406, 14031 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 171, 273, 335, 371 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -1638, -2621, -3211, -3565 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            find_pred_coefs.silk_find_pred_coefs_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 10;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 0;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 0;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 100;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 222303875, 260069788, 69750831, 5169700 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 3462,184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108,3462,
184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6255,-1966,932,-636,258,-229,106,-158,81,-124,49,-76,50,-71,28,-13,6445,
-1891,917,-569,257,-191,115,-143,102,-130,72,-94,72,-93,51,-54,7430,-1482,
480,-204,56,-1,34,-80,153,-176,151,-153,153,-158,127,-85,4372,2832,702,
-50,-843,565,-1311,920,277,-503,-508,103,706,-588,93,27});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6362,-2036,984,-683,282,-255,121,-182,96,-149,60,-95,64,-91,36,-18,6555,
-1960,968,-611,281,-213,131,-165,121,-156,88,-116,91,-120,67,-72,7553,-1534,
506,-219,61,-2,38,-93,180,-211,184,-190,194,-203,166,-113,4441,2931,740,
-52,-924,632,-1487,1061,327,-601,-619,125,893,-756,121,36});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 539871846, 539871846, 539871846, 539871846 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17193, 17139, 16406, 14031 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 171, 273, 335, 371 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -1638, -2621, -3211, -3565 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 234778624, 249561000, 235866112, 74383360 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 7, -1, 9, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            process_gains.silk_process_gains_FIX(through_psEnc, through_sEncCtrl, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 0;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 0;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 0;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 100;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 217055232, 557842432, 295698432, 158334976 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 3462,184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108,3462,
184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6255,-1966,932,-636,258,-229,106,-158,81,-124,49,-76,50,-71,28,-13,6445,
-1891,917,-569,257,-191,115,-143,102,-130,72,-94,72,-93,51,-54,7430,-1482,
480,-204,56,-1,34,-80,153,-176,151,-153,153,-158,127,-85,4372,2832,702,
-50,-843,565,-1311,920,277,-503,-508,103,706,-588,93,27});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6362,-2036,984,-683,282,-255,121,-182,96,-149,60,-95,64,-91,36,-18,6555,
-1960,968,-611,281,-213,131,-165,121,-156,88,-116,91,-120,67,-72,7553,-1534,
506,-219,61,-2,38,-93,180,-211,184,-190,194,-203,166,-113,4441,2931,740,
-52,-924,632,-1487,1061,327,-601,-619,125,893,-756,121,36});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 539871846, 539871846, 539871846, 539871846 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17193, 17139, 16406, 14031 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 171, 273, 335, 371 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -1638, -2621, -3211, -3565 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 790;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 234778624, 249561000, 235866112, 74383360 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 7, -1, 9, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 220594176, 576978944, 70778880, 8107008 });
            expectedControl.lastGainIndexPrev = 10;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Pointer<int> xfw_Q3 = Pointer.Malloc<int>(through_psEnc.sCmn.frame_length);
            prefilter.silk_prefilter_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_x_frame);
            #region autogen
            int[] expected_xfw_Q3_1 =
            new int[] { -2024,-2861,-4695,-6883,-9217,-11384,-13334,-15512,-16986,-18006,-18003,-19008,-18331,
-17791,-18336,-17521,-16994,-16091,-16261,-15389,-14906,-14145,-12971,-12763,-11576,-11155,
-10976,-9276,-8283,-7792,-7253,-5755,-6254,-4576,-3978,-3127,-2977,-2509,-1653,
-1771,-587,162,573,610,-1395,8785,-56073,-176404,-50774,-61694,-31289,-27578,
-14956,-8038,-828,6147,9502,15255,16684,21055,21501,25096,24571,27151,26387,
28617,26724,27584,26261,27531,25718,26965,24725,26609,23573,24050,24108,21556,
22013,19843,16196,13649,12313,10900,8385,8002,6887,6221,4825,5453,3907,
3165,2336,3283,851,1770,1076,1321,496,214,282,-300,237,-371,
-381,-1401,-809,-1341,-692,-1534,-734,-1902,-1492,-1065,-1418,-2335,-1424,
-2142,-1846,-1226,-1201,-838,-1230,-1067,-923,-1024,-838,-853,-689,-906,
-751,-755,-664,-565,-601,-537,-73,-445,-607,-396,-684,54,-664,
-265,97,38,-625,-575,-489,-674,-751,-138,-43,114,-72,-316,
-127,221,348,352};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 217055232, 557842432, 295698432, 158334976 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 3462,184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108,3462,
184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6255,-1966,932,-636,258,-229,106,-158,81,-124,49,-76,50,-71,28,-13,6445,
-1891,917,-569,257,-191,115,-143,102,-130,72,-94,72,-93,51,-54,7430,-1482,
480,-204,56,-1,34,-80,153,-176,151,-153,153,-158,127,-85,4372,2832,702,
-50,-843,565,-1311,920,277,-503,-508,103,706,-588,93,27});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6362,-2036,984,-683,282,-255,121,-182,96,-149,60,-95,64,-91,36,-18,6555,
-1960,968,-611,281,-213,131,-165,121,-156,88,-116,91,-120,67,-72,7553,-1534,
506,-219,61,-2,38,-93,180,-211,184,-190,194,-203,166,-113,4441,2931,740,
-52,-924,632,-1487,1061,327,-601,-619,125,893,-756,121,36});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 539871846, 539871846, 539871846, 539871846 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17193, 17139, 16406, 14031 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 171, 273, 335, 371 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -1638, -2621, -3211, -3565 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 790;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 234778624, 249561000, 235866112, 74383360 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 7, -1, 9, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 220594176, 576978944, 70778880, 8107008 });
            expectedControl.lastGainIndexPrev = 10;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_1, xfw_Q3);
            encode_frame.silk_LBRR_encode_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_condCoding);
            #region autogen
            int[] expected_xfw_Q3_2 =
            new int[] { -2024,-2861,-4695,-6883,-9217,-11384,-13334,-15512,-16986,-18006,-18003,-19008,-18331,
-17791,-18336,-17521,-16994,-16091,-16261,-15389,-14906,-14145,-12971,-12763,-11576,-11155,
-10976,-9276,-8283,-7792,-7253,-5755,-6254,-4576,-3978,-3127,-2977,-2509,-1653,
-1771,-587,162,573,610,-1395,8785,-56073,-176404,-50774,-61694,-31289,-27578,
-14956,-8038,-828,6147,9502,15255,16684,21055,21501,25096,24571,27151,26387,
28617,26724,27584,26261,27531,25718,26965,24725,26609,23573,24050,24108,21556,
22013,19843,16196,13649,12313,10900,8385,8002,6887,6221,4825,5453,3907,
3165,2336,3283,851,1770,1076,1321,496,214,282,-300,237,-371,
-381,-1401,-809,-1341,-692,-1534,-734,-1902,-1492,-1065,-1418,-2335,-1424,
-2142,-1846,-1226,-1201,-838,-1230,-1067,-923,-1024,-838,-853,-689,-906,
-751,-755,-664,-565,-601,-537,-73,-445,-607,-396,-684,54,-664,
-265,97,38,-625,-575,-489,-674,-751,-138,-43,114,-72,-316,
-127,221,348,352};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 127868, 6080 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -87185, -15636 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -56194, -3851 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 78, 50, 102, 235 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25649, 30328, 32284, 27855 });
            expectedEncoder.sCmn.sVAD.HPstate = -12;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 7157, 348, 281, 969 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 300031, 6158830, 7630947, 2214671 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 17;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 0;
            expectedEncoder.sCmn.sNSQ.lagPrev = 100;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 0;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 65536;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 0;
            expectedEncoder.sCmn.prevLag = 100;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 2;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 1;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = 26560;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 0, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { 61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,
3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,
2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,
700,569,434,504,250,251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,
-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,
-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,
-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,
-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,
-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,
18,11,5,-51,-53,-46,59,-1,129,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 0;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-10,-38,-108,-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,
-2472,-2460,-2303,-2093,-2033,-1885,-1728,-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,
-630,-479,-418,-383,-238,-283,-167,-73,4,11,16,86,61,155,256,305,293,
18,1104,-6212,-23623,-14388,-9898,-5611,-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,
4448,4290,4288,4071,4105,3844,3722,3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,
2074,1842,1737,1576,1506,1423,1180,1112,1012,947,785,837,700,569,434,504,250,
251,186,182,90,12,-3,-90,-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,
-423,-365,-390,-511,-457,-515,-515,-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,
-506,-473,-492,-478,-468,-460,-455,-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,
-367,-311,-330,-352,-359,-271,-278,-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,
-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,
-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,5,-51,-53,
-46,59,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 217055232, 557842432, 295698432, 158334976 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 3462,184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108,3462,
184,465,-249,223,-268,129,-78,231,-72,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6255,-1966,932,-636,258,-229,106,-158,81,-124,49,-76,50,-71,28,-13,6445,
-1891,917,-569,257,-191,115,-143,102,-130,72,-94,72,-93,51,-54,7430,-1482,
480,-204,56,-1,34,-80,153,-176,151,-153,153,-158,127,-85,4372,2832,702,
-50,-843,565,-1311,920,277,-503,-508,103,706,-588,93,27});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6362,-2036,984,-683,282,-255,121,-182,96,-149,60,-95,64,-91,36,-18,6555,
-1960,968,-611,281,-213,131,-165,121,-156,88,-116,91,-120,67,-72,7553,-1534,
506,-219,61,-2,38,-93,180,-211,184,-190,194,-203,166,-113,4441,2931,740,
-52,-924,632,-1487,1061,327,-601,-619,125,893,-756,121,36});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 539871846, 539871846, 539871846, 539871846 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17193, 17139, 16406, 14031 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 171, 273, 335, 371 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -1638, -2621, -3211, -3565 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 790;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 101859;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 234778624, 249561000, 235866112, 74383360 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 7, -1, 9, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 220594176, 576978944, 70778880, 8107008 });
            expectedControl.lastGainIndexPrev = 10;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_2, xfw_Q3);
        }

        [TestMethod]
        public void Test_silk_encode_frame_internal_17()
        {
            #region autogen
            silk_encoder_state_fix through_psEnc = new silk_encoder_state_fix();
            through_psEnc.sCmn = new silk_encoder_state();
            through_psEnc.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.variable_HP_smth1_Q15 = 193536;
            through_psEnc.sCmn.variable_HP_smth2_Q15 = 193536;
            through_psEnc.sCmn.sLP = new silk_LP_state();
            through_psEnc.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.sLP.transition_frame_no = 0;
            through_psEnc.sCmn.sLP.mode = 0;
            through_psEnc.sCmn.sVAD = new silk_VAD_state();
            through_psEnc.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            through_psEnc.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            through_psEnc.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            through_psEnc.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            through_psEnc.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            through_psEnc.sCmn.sVAD.HPstate = 7;
            through_psEnc.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            through_psEnc.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            through_psEnc.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            through_psEnc.sCmn.sVAD.counter = 18;
            through_psEnc.sCmn.sNSQ = new silk_nsq_state();
            through_psEnc.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            through_psEnc.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            through_psEnc.sCmn.sNSQ.lagPrev = 0;
            through_psEnc.sCmn.sNSQ.sLTP_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.rand_seed = 0;
            through_psEnc.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            through_psEnc.sCmn.sNSQ.rewhite_flag = 0;
            through_psEnc.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            through_psEnc.sCmn.speech_activity_Q8 = 24;
            through_psEnc.sCmn.allow_bandwidth_switch = 0;
            through_psEnc.sCmn.LBRRprevLastGainIndex = 0;
            through_psEnc.sCmn.prevSignalType = 1;
            through_psEnc.sCmn.prevLag = 0;
            through_psEnc.sCmn.pitch_LPC_win_length = 192;
            through_psEnc.sCmn.max_pitch_lag = 144;
            through_psEnc.sCmn.API_fs_Hz = 48000;
            through_psEnc.sCmn.prev_API_fs_Hz = 48000;
            through_psEnc.sCmn.maxInternal_fs_Hz = 16000;
            through_psEnc.sCmn.minInternal_fs_Hz = 8000;
            through_psEnc.sCmn.desiredInternal_fs_Hz = 8000;
            through_psEnc.sCmn.fs_kHz = 8;
            through_psEnc.sCmn.nb_subfr = 4;
            through_psEnc.sCmn.frame_length = 160;
            through_psEnc.sCmn.subfr_length = 40;
            through_psEnc.sCmn.ltp_mem_length = 160;
            through_psEnc.sCmn.la_pitch = 16;
            through_psEnc.sCmn.la_shape = 40;
            through_psEnc.sCmn.shapeWinLength = 120;
            through_psEnc.sCmn.TargetRate_bps = 7170;
            through_psEnc.sCmn.PacketSize_ms = 40;
            through_psEnc.sCmn.PacketLoss_perc = 8;
            through_psEnc.sCmn.frameCounter = 3;
            through_psEnc.sCmn.Complexity = 10;
            through_psEnc.sCmn.nStatesDelayedDecision = 4;
            through_psEnc.sCmn.useInterpolatedNLSFs = 1;
            through_psEnc.sCmn.shapingLPCOrder = 16;
            through_psEnc.sCmn.predictLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationComplexity = 2;
            through_psEnc.sCmn.pitchEstimationLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationThreshold_Q16 = 45875;
            through_psEnc.sCmn.LTPQuantLowComplexity = 0;
            through_psEnc.sCmn.mu_LTP_Q9 = 15;
            through_psEnc.sCmn.sum_log_gain_Q7 = 0;
            through_psEnc.sCmn.NLSF_MSVQ_Survivors = 32;
            through_psEnc.sCmn.first_frame_after_reset = 0;
            through_psEnc.sCmn.controlled_since_last_payload = 0;
            through_psEnc.sCmn.warping_Q16 = 7864;
            through_psEnc.sCmn.useCBR = 0;
            through_psEnc.sCmn.prefillFlag = 0;
            through_psEnc.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            through_psEnc.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            through_psEnc.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            through_psEnc.sCmn.psNLSF_CB.nVectors = 32;
            through_psEnc.sCmn.psNLSF_CB.order = 10;
            through_psEnc.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            through_psEnc.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            through_psEnc.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            through_psEnc.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            through_psEnc.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            through_psEnc.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            through_psEnc.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            through_psEnc.sCmn.input_tilt_Q15 = -474;
            through_psEnc.sCmn.SNR_dB_Q7 = 1779;
            through_psEnc.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            through_psEnc.sCmn.LBRR_flag = 0;
            through_psEnc.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            through_psEnc.sCmn.indices = new SideInfoIndices();
            through_psEnc.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            through_psEnc.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.lagIndex = 0;
            through_psEnc.sCmn.indices.contourIndex = 0;
            through_psEnc.sCmn.indices.signalType = 1;
            through_psEnc.sCmn.indices.quantOffsetType = 0;
            through_psEnc.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            through_psEnc.sCmn.indices.PERIndex = 0;
            through_psEnc.sCmn.indices.LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices.Seed = 2;
            through_psEnc.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.arch = 0;
            through_psEnc.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.inputBufIx = 160;
            through_psEnc.sCmn.nFramesPerPacket = 2;
            through_psEnc.sCmn.nFramesEncoded = 1;
            through_psEnc.sCmn.nChannelsAPI = 2;
            through_psEnc.sCmn.nChannelsInternal = 1;
            through_psEnc.sCmn.channelNb = 0;
            through_psEnc.sCmn.frames_since_onset = 0;
            through_psEnc.sCmn.ec_prevSignalType = 1;
            through_psEnc.sCmn.ec_prevLagIndex = 0;
            through_psEnc.sCmn.useDTX = 0;
            through_psEnc.sCmn.inDTX = 0;
            through_psEnc.sCmn.noSpeechCounter = 0;
            through_psEnc.sCmn.useInBandFEC = 1;
            through_psEnc.sCmn.LBRR_enabled = 0;
            through_psEnc.sCmn.LBRR_GainIncreases = 0;
            through_psEnc.sCmn.indices_LBRR[0] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[0].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[0].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[1] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[1].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[1].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[2] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[2].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[2].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].Seed = 0;
            through_psEnc.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sShape = new silk_shape_state();
            through_psEnc.sShape.LastGainIndex = 48;
            through_psEnc.sShape.HarmBoost_smth_Q16 = 1485;
            through_psEnc.sShape.HarmShapeGain_smth_Q16 = 0;
            through_psEnc.sShape.Tilt_smth_Q16 = -14262;
            through_psEnc.sPrefilt = new silk_prefilter_state();
            through_psEnc.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            through_psEnc.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            through_psEnc.sPrefilt.sLTP_shp_buf_idx = 352;
            through_psEnc.sPrefilt.sLF_AR_shp_Q12 = 115333;
            through_psEnc.sPrefilt.sLF_MA_shp_Q12 = 180321;
            through_psEnc.sPrefilt.sHarmHP_Q2 = 101;
            through_psEnc.sPrefilt.rand_seed = 0;
            through_psEnc.sPrefilt.lagPrev = 0;
            through_psEnc.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            through_psEnc.LTPCorr_Q15 = 0;
            silk_encoder_control through_sEncCtrl = new silk_encoder_control();
            through_sEncCtrl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            through_sEncCtrl.LTP_scale_Q14 = -858993460;
            through_sEncCtrl.pitchL = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Lambda_Q10 = -858993460;
            through_sEncCtrl.input_quality_Q14 = -858993460;
            through_sEncCtrl.coding_quality_Q14 = -858993460;
            through_sEncCtrl.sparseness_Q8 = -858993460;
            through_sEncCtrl.predGain_Q16 = -858993460;
            through_sEncCtrl.LTPredCodGain_Q7 = -858993460;
            through_sEncCtrl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.lastGainIndexPrev = -52;
            Pointer<short> in_x_frame = Helpers.WrapWithArrayPointer<short>(
            new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,
28,-16,-39,-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,
-85,-50,-76,-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,
-133,-154,-105,-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,
-101,-175,-48,-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,
682,603,778,861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,
3091,3371,3215,3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,
768,-103,-1005,-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,
-207,-314,-372,-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,
-1768,-1863,-1924,-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,
-1152,-860,-587,-358,-253,0,-28,32735,-39,-19994,-52,-2804,-70,10329,-71,785,-69,
-9596,-80,26967,-91,10867,-98,10164,-104,-13017,-85,-28248,-94,1987,-91,18032,-91,24601,
-106,-28240,-126,23113,-105,352,0,-15739,1,-16287,2,101,0,0,0,0,0,
-241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-3072,2,-3072,2,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,25600,0,25600,0,25600,0,25600,
0,0,0,5000,0,2500,0,1600,0,1200,0,-29256,6,7025,13,31457,20,
20097,27,50,0,25,0,16,0,12,0,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            in_x_frame = in_x_frame.Point(500);
            #endregion
            int in_condCoding = 2;
            Pointer<short> res_pitch = Pointer.Malloc<short>(through_psEnc.sCmn.la_pitch + through_psEnc.sCmn.frame_length + through_psEnc.sCmn.ltp_mem_length);
            Pointer<short> res_pitch_frame = res_pitch.Point(through_psEnc.sCmn.ltp_mem_length);
            find_pitch_lags.silk_find_pitch_lags_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            silk_encoder_state_fix expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1485;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -14262;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            silk_encoder_control expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = -858993460;
            expectedControl.coding_quality_Q14 = -858993460;
            expectedControl.sparseness_Q8 = -858993460;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            noise_shape_analysis.silk_noise_shape_analysis_FIX(through_psEnc, through_sEncCtrl, res_pitch_frame, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 553, 3700, 6784, 10240, 13568, 16640, 19968, 23040, 26240, 29184, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 5, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 6326575, 5848400, 5703396, 5557418 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2866,1510,996,278,714,183,-550,832,499,236,-1268,697,-427,6,-63,-164,-1513,
1119,-115,183,1626,518,437,462,795,632,-840,-225,-186,-335,149,127,-2353,457,
-331,-105,974,643,-393,-216,9,-269,-344,-14,-250,-92,188,263,-1137,-912,-128,
1109,888,814,-144,211,-53,-460,-160,120,-27,163,288,288});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2913,1562,1051,297,780,205,-625,960,586,286,-1547,866,-539,8,-82,-219,-1544,
1160,-122,193,1779,577,495,532,933,759,-1025,-279,-234,-432,195,169,-2399,475,
-349,-115,1065,718,-446,-249,11,-322,-419,-17,-316,-119,246,351,-1156,-946,-137,
1190,970,908,-164,244,-62,-550,-195,150,-35,209,377,385});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 865520230, 865520230, 865520230, 865520230 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 14740, 17178, 17402, 17389 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 394, 407, 415, 420 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -3778, -3905, -3982, -4027 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 52;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            find_pred_coefs.silk_find_pred_coefs_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 50, 10, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 48;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 6326575, 5848400, 5703396, 5557418 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 959,335,351,-282,516,288,258,-233,181,68,-13108,-13108,-13108,-13108,-13108,-13108,65,
30,120,-406,540,437,276,-275,178,106,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2866,1510,996,278,714,183,-550,832,499,236,-1268,697,-427,6,-63,-164,-1513,
1119,-115,183,1626,518,437,462,795,632,-840,-225,-186,-335,149,127,-2353,457,
-331,-105,974,643,-393,-216,9,-269,-344,-14,-250,-92,188,263,-1137,-912,-128,
1109,888,814,-144,211,-53,-460,-160,120,-27,163,288,288});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2913,1562,1051,297,780,205,-625,960,586,286,-1547,866,-539,8,-82,-219,-1544,
1160,-122,193,1779,577,495,532,933,759,-1025,-279,-234,-432,195,169,-2399,475,
-349,-115,1065,718,-446,-249,11,-322,-419,-17,-316,-119,246,351,-1156,-946,-137,
1190,970,908,-164,244,-62,-550,-195,150,-35,209,377,385});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 865520230, 865520230, 865520230, 865520230 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 14740, 17178, 17402, 17389 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 394, 407, 415, 420 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -3778, -3905, -3982, -4027 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 52;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 86097920, 100466688, 84738048, 81756160 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            process_gains.silk_process_gains_FIX(through_psEnc, through_sEncCtrl, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -1835008,-2523169,-3362330,-4524788,-4642727,-4521199,-5186940,-5936809,-6411661,-6805580,-5518041,-6123096,-5961789,
-5945744,-6922215,-8220240,-6858167});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 352;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 115333;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 180321;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 101;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 83886080, 44826624, 23855104, 12713984 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 959,335,351,-282,516,288,258,-233,181,68,-13108,-13108,-13108,-13108,-13108,-13108,65,
30,120,-406,540,437,276,-275,178,106,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2866,1510,996,278,714,183,-550,832,499,236,-1268,697,-427,6,-63,-164,-1513,
1119,-115,183,1626,518,437,462,795,632,-840,-225,-186,-335,149,127,-2353,457,
-331,-105,974,643,-393,-216,9,-269,-344,-14,-250,-92,188,263,-1137,-912,-128,
1109,888,814,-144,211,-53,-460,-160,120,-27,163,288,288});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2913,1562,1051,297,780,205,-625,960,586,286,-1547,866,-539,8,-82,-219,-1544,
1160,-122,193,1779,577,495,532,933,759,-1025,-279,-234,-432,195,169,-2399,475,
-349,-115,1065,718,-446,-249,11,-322,-419,-17,-316,-119,246,351,-1156,-946,-137,
1190,970,908,-164,244,-62,-550,-195,150,-35,209,377,385});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 865520230, 865520230, 865520230, 865520230 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 14740, 17178, 17402, 17389 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 394, 407, 415, 420 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -3778, -3905, -3982, -4027 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 1086;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 52;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 86097920, 100466688, 84738048, 81756160 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 9124608, 9206528, 8715776, 8552192 });
            expectedControl.lastGainIndexPrev = 48;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Pointer<int> xfw_Q3 = Pointer.Malloc<int>(through_psEnc.sCmn.frame_length);
            prefilter.silk_prefilter_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_x_frame);
            #region autogen
            int[] expected_xfw_Q3_1 =
            new int[] { 9,-198,371,-262,-757,-392,-19,-366,489,123,160,-116,246,
98,20,-221,-399,-60,171,158,-347,-47,983,165,-197,-16,
-473,-326,242,-54,-284,-215,240,178,83,-370,-201,-83,507,
59,1133,883,457,-285,-161,259,273,-97,427,-164,56,526,
456,380,-92,-198,328,-232,452,175,65,533,-31,197,-680,
-330,361,56,-368,413,258,0,199,-148,446,-14,-428,-49,
-322,126,-15,341,-335,-354,532,355,386,-228,52,-409,21,
-481,-194,292,238,558,636,-175,417,173,266,-132,520,139,
-103,143,429,-272,-360,-436,-1153,-329,283,-252,-523,-699,-759,
-32,86,500,425,476,-267,59,-246,79,-287,-32,-224,291,
-81,-333,146,400,-550,-920,-384,-271,-1,-137,179,-449,91,
320,-165,163,-605,-315,58,-222,-254,-355,-495,388,201,-137,
-744,-400,549,-152};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 83886080, 44826624, 23855104, 12713984 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 959,335,351,-282,516,288,258,-233,181,68,-13108,-13108,-13108,-13108,-13108,-13108,65,
30,120,-406,540,437,276,-275,178,106,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2866,1510,996,278,714,183,-550,832,499,236,-1268,697,-427,6,-63,-164,-1513,
1119,-115,183,1626,518,437,462,795,632,-840,-225,-186,-335,149,127,-2353,457,
-331,-105,974,643,-393,-216,9,-269,-344,-14,-250,-92,188,263,-1137,-912,-128,
1109,888,814,-144,211,-53,-460,-160,120,-27,163,288,288});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2913,1562,1051,297,780,205,-625,960,586,286,-1547,866,-539,8,-82,-219,-1544,
1160,-122,193,1779,577,495,532,933,759,-1025,-279,-234,-432,195,169,-2399,475,
-349,-115,1065,718,-446,-249,11,-322,-419,-17,-316,-119,246,351,-1156,-946,-137,
1190,970,908,-164,244,-62,-550,-195,150,-35,209,377,385});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 865520230, 865520230, 865520230, 865520230 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 14740, 17178, 17402, 17389 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 394, 407, 415, 420 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -3778, -3905, -3982, -4027 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 1086;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 52;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 86097920, 100466688, 84738048, 81756160 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 9124608, 9206528, 8715776, 8552192 });
            expectedControl.lastGainIndexPrev = 48;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_1, xfw_Q3);
            encode_frame.silk_LBRR_encode_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_condCoding);
            #region autogen
            int[] expected_xfw_Q3_2 =
            new int[] { 9,-198,371,-262,-757,-392,-19,-366,489,123,160,-116,246,
98,20,-221,-399,-60,171,158,-347,-47,983,165,-197,-16,
-473,-326,242,-54,-284,-215,240,178,83,-370,-201,-83,507,
59,1133,883,457,-285,-161,259,273,-97,427,-164,56,526,
456,380,-92,-198,328,-232,452,175,65,533,-31,197,-680,
-330,361,56,-368,413,258,0,199,-148,446,-14,-428,-49,
-322,126,-15,341,-335,-354,532,355,386,-228,52,-409,21,
-481,-194,292,238,558,636,-175,417,173,266,-132,520,139,
-103,143,429,-272,-360,-436,-1153,-329,283,-252,-523,-699,-759,
-32,86,500,425,476,-267,59,-246,79,-287,-32,-224,291,
-81,-333,146,400,-550,-920,-384,-271,-1,-137,179,-449,91,
320,-165,163,-605,-315,58,-222,-254,-355,-495,388,201,-137,
-744,-400,549,-152};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -87205, -4040 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -27333, -23759 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 28580, -55095 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 6, 9, 87, 258 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 25645, 30323, 32279, 27851 });
            expectedEncoder.sCmn.sVAD.HPstate = 7;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 606, 234, 308, 1060 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3538843, 9168692, 6968890, 2024256 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 18;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,-1976,-2128,-1669,-1957,-1659,-1365,-1747,
-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,171,-252,-618,-129,162,-268,81,
-259,-553,-123,-524,-171,149,-748,216,973,-83,856,-42,-864,-16143,-14605,-12311,-12061,
-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,5694,5287,4214,5353,4007,3134,4090,
4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,1022,-324,-339,57,696,1115,1595,
1745,1207,868,1309,753,1181,705,1146,740,273,872,317,828,339,-88,-370,119,
-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,-630,-234,-723,-207,-696,-1150,-1489,
-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,-1366,-1503,-1692,-1826,-1996,-1685,-1442,
-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,-1460,-1227,-970,-1274,-965,-760,-1036,
-764,-1017,-1236,-925,-713,-521,-321,340,-23,-314,-540,-162,-2901,-2843,-2193,-1989,-1565,
-1976,-2128,-1669,-1957,-1659,-1365,-1747,-1989,-2216,-2458,-2704,123,74,-488,-618,-314,42,
171,-252,-618,-129,162,-268,81,-259,-553,-123,-524,-171,149,-748,216,973,-83,
856,-42,-864,-16143,-14605,-12311,-12061,-4364,1405,1496,2170,3109,1521,2095,2527,8919,6966,
5694,5287,4214,5353,4007,3134,4090,4938,5619,4505,5403,4456,3599,4597,5112,-2095,-266,
1022,-324,-339,57,696,1115,1595,1745,1207,868,1309,753,1181,705,1146,740,273,
872,317,828,339,-88,-370,119,-317,-771,-1035,-524,-934,-1353,-1648,-2005,-1388,-987,
-630,-234,-723,-207,-696,-1150,-1489,-1000,-755,-611,-821,-576,-762,-998,-1168,-923,-1149,
-1366,-1503,-1692,-1826,-1996,-1685,-1442,-1696,-1394,-1623,-1819,-1496,-1298,-1567,-1291,-1508,-1253,
-1460,-1227,-970,-1274,-965,-760,-1036,-764,-1017,-1236,-925,-713,-521,-321,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,-9560,-13721,-14052,-11183,
-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,-8249,-9346,-9458,-6393,
-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,-5015,-1653,-5342,-1461,
-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,-62770,-62966,-63771,-17533,
2183,-8104,-650,3733,-5428,3761,6355,50337,23773,25971,24434,21349,32370,
21588,19883,28268,31735,35795,27422,37556,29099,27183,35582,37020,-12093,17347,
16445,7313,7500,8799,10794,11862,11832,11444,5961,5236,8090,3197,7694,
2554,6775,2711,530,5542,253,4982,291,-1629,-2129,1912,-2182,-3960,
-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,1546,-3175,1553,-3250,
-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,-4452,-1812,-1532,-3436,
-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,-3240,-952,424,-748,
156,-1648,-480,-1976,-900,1508,-984,516,1076,-1076,492,-1988,-3428,
-1356,340,2168,2776,2211,-1128,-1808,-3024,61,-19847,-12164,-11064,-10920,
-9560,-13721,-14052,-11183,-14784,-11902,-11430,-14478,-15303,-16715,-17987,-19481,-202,
-8249,-9346,-9458,-6393,-4582,-3715,-6544,-7232,-3112,-2146,-5222,-1308,-4598,
-5015,-1653,-5342,-1461,-579,-6836,1944,4381,-3398,5679,-3116,-5357,-107950,
-62770,-62966,-63771,-17533,2183,-8104,-650,3733,-5428,3761,6355,50337,23773,
25971,24434,21349,32370,21588,19883,28268,31735,35795,27422,37556,29099,27183,
35582,37020,-12093,17347,16445,7313,7500,8799,10794,11862,11832,11444,5961,
5236,8090,3197,7694,2554,6775,2711,530,5542,253,4982,291,-1629,
-2129,1912,-2182,-3960,-4639,44,-4258,-5670,-6724,-7926,-2608,-1308,-135,
1546,-3175,1553,-3250,-4976,-6029,-1666,2068,2032,-96,796,-444,-2776,
-4452,-1812,-1532,-3436,-4936,-5564,-5080,-5400,-2552,616,-848,348,-1760,
-3240,-952,424,-748,156,-1648,-480,-1976,-900,1508,-984,516,1076,
-1076,492,-1988,-3428,-1356,340,2168,2776,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -7792,-9264,-10192,-11472,-12384,-13536,-11424,-9776,-11504,-9456,-11008,-12336,-10144,
-8800,-10624,-8752,-10224,-8496,-9904,-8320,-6576,-8640,-6544,-5152,-7024,-5184,
-6896,-8384,-6272,-4832,-3536,-2176,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -4223,-6151,-8179,-8975,-6233,-6649,-7892,-7276,-10394,-8988,-10257,-12189,-9806,
-11565,-11741,-11604});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2288;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 158334976;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 24;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7170;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 8;
            expectedEncoder.sCmn.frameCounter = 3;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 23731, 24720, 25026, 24261 });
            expectedEncoder.sCmn.input_tilt_Q15 = -474;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 2;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -1,129,34,19,-45,-8,44,28,-12,67,-45,44,77,40,43,-37,-15,
56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,
-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,
36,-55,9,37,9,54,41,-57,68,-13,34,-27,74,-20,-7,23,36,
-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,62,13,29,-60,20,
-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,
-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,
91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,
-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,
2,10,-31,-84,-16,-18,-58,-4,37,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -241,-444,-707,-1048,-1409,-1742,-2018,-2290,-2470,-2549,-2472,-2460,-2303,-2093,-2033,-1885,-1728,
-1552,-1501,-1395,-1298,-1195,-1035,-977,-856,-789,-791,-630,-479,-418,-383,-238,-283,-167,
-73,4,11,16,86,61,155,256,305,293,18,1104,-6212,-23623,-14388,-9898,-5611,
-2710,-499,1192,2177,3246,3555,4115,4101,4443,4324,4448,4290,4288,4071,4105,3844,3722,
3475,3428,3154,3111,2816,2866,2541,2423,2433,2121,2074,1842,1737,1576,1506,1423,1180,
1112,1012,947,785,837,700,569,434,504,250,251,186,182,90,12,-3,-90,
-54,-117,-141,-283,-270,-331,-283,-362,-303,-415,-423,-365,-390,-511,-457,-515,-515,
-430,-476,-450,-508,-475,-476,-492,-495,-488,-478,-506,-473,-492,-478,-468,-460,-455,
-379,-429,-429,-391,-430,-321,-417,-340,-297,-274,-367,-311,-330,-352,-359,-271,-278,
-239,-237,-249,-222,-161,-131,-112,-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,
-76,-101,-32,-53,-59,-92,-111,-86,-25,-28,-89,-57,95,4,-24,-3,-87,
-68,25,-27,-65,-60,18,11,5,-51,-53,-46,59,-1,129,34,19,-45,
-8,44,28,-12,67,-45,44,77,40,43,-37,-15,56,-40,101,-2,8,
80,-30,56,-91,-9,64,-19,-14,68,-5,16,23,-29,64,-39,-30,20,
-53,55,-13,42,-66,-21,73,7,42,-46,13,-59,36,-55,9,37,9,
54,41,-57,68,-13,34,-27,74,-20,-7,23,36,-57,-16,-45,-119,26,
43,-47,-41,-69,-66,36,16,62,13,29,-60,20,-21,33,-32,9,-31,
46,-23,-41,18,45,-85,-93,-7,1,20,-18,6,-74,30,40,-34,13,
-73,-12,27,-17,-30,-37,-46,64,12,-36,-99,-16,91,-27,-17,5,50,
-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,-31,-10,-17,
23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,-31,-84,-16,
-18,-58,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 83886080, 44826624, 23855104, 12713984 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 959,335,351,-282,516,288,258,-233,181,68,-13108,-13108,-13108,-13108,-13108,-13108,65,
30,120,-406,540,437,276,-275,178,106,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2866,1510,996,278,714,183,-550,832,499,236,-1268,697,-427,6,-63,-164,-1513,
1119,-115,183,1626,518,437,462,795,632,-840,-225,-186,-335,149,127,-2353,457,
-331,-105,974,643,-393,-216,9,-269,-344,-14,-250,-92,188,263,-1137,-912,-128,
1109,888,814,-144,211,-53,-460,-160,120,-27,163,288,288});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2913,1562,1051,297,780,205,-625,960,586,286,-1547,866,-539,8,-82,-219,-1544,
1160,-122,193,1779,577,495,532,933,759,-1025,-279,-234,-432,195,169,-2399,475,
-349,-115,1065,718,-446,-249,11,-322,-419,-17,-316,-119,246,351,-1156,-946,-137,
1190,970,908,-164,244,-62,-550,-195,150,-35,209,377,385});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 865520230, 865520230, 865520230, 865520230 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 14740, 17178, 17402, 17389 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 394, 407, 415, 420 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -3778, -3905, -3982, -4027 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 1086;
            expectedControl.input_quality_Q14 = 12112;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 52;
            expectedControl.predGain_Q16 = 73838;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 86097920, 100466688, 84738048, 81756160 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 9124608, 9206528, 8715776, 8552192 });
            expectedControl.lastGainIndexPrev = 48;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_2, xfw_Q3);
        }

        [TestMethod]
        public void Test_silk_encode_frame_internal_18()
        {
            #region autogen
            silk_encoder_state_fix through_psEnc = new silk_encoder_state_fix();
            through_psEnc.sCmn = new silk_encoder_state();
            through_psEnc.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.variable_HP_smth1_Q15 = 193536;
            through_psEnc.sCmn.variable_HP_smth2_Q15 = 193536;
            through_psEnc.sCmn.sLP = new silk_LP_state();
            through_psEnc.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.sLP.transition_frame_no = 0;
            through_psEnc.sCmn.sLP.mode = 0;
            through_psEnc.sCmn.sVAD = new silk_VAD_state();
            through_psEnc.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            through_psEnc.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            through_psEnc.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            through_psEnc.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            through_psEnc.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            through_psEnc.sCmn.sVAD.HPstate = -3680;
            through_psEnc.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            through_psEnc.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            through_psEnc.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            through_psEnc.sCmn.sVAD.counter = 19;
            through_psEnc.sCmn.sNSQ = new silk_nsq_state();
            through_psEnc.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            through_psEnc.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            through_psEnc.sCmn.sNSQ.lagPrev = 0;
            through_psEnc.sCmn.sNSQ.sLTP_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.rand_seed = 0;
            through_psEnc.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            through_psEnc.sCmn.sNSQ.rewhite_flag = 0;
            through_psEnc.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            through_psEnc.sCmn.speech_activity_Q8 = 255;
            through_psEnc.sCmn.allow_bandwidth_switch = 0;
            through_psEnc.sCmn.LBRRprevLastGainIndex = 0;
            through_psEnc.sCmn.prevSignalType = 1;
            through_psEnc.sCmn.prevLag = 0;
            through_psEnc.sCmn.pitch_LPC_win_length = 192;
            through_psEnc.sCmn.max_pitch_lag = 144;
            through_psEnc.sCmn.API_fs_Hz = 48000;
            through_psEnc.sCmn.prev_API_fs_Hz = 48000;
            through_psEnc.sCmn.maxInternal_fs_Hz = 16000;
            through_psEnc.sCmn.minInternal_fs_Hz = 8000;
            through_psEnc.sCmn.desiredInternal_fs_Hz = 8000;
            through_psEnc.sCmn.fs_kHz = 8;
            through_psEnc.sCmn.nb_subfr = 4;
            through_psEnc.sCmn.frame_length = 160;
            through_psEnc.sCmn.subfr_length = 40;
            through_psEnc.sCmn.ltp_mem_length = 160;
            through_psEnc.sCmn.la_pitch = 16;
            through_psEnc.sCmn.la_shape = 40;
            through_psEnc.sCmn.shapeWinLength = 120;
            through_psEnc.sCmn.TargetRate_bps = 7100;
            through_psEnc.sCmn.PacketSize_ms = 40;
            through_psEnc.sCmn.PacketLoss_perc = 12;
            through_psEnc.sCmn.frameCounter = 4;
            through_psEnc.sCmn.Complexity = 10;
            through_psEnc.sCmn.nStatesDelayedDecision = 4;
            through_psEnc.sCmn.useInterpolatedNLSFs = 1;
            through_psEnc.sCmn.shapingLPCOrder = 16;
            through_psEnc.sCmn.predictLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationComplexity = 2;
            through_psEnc.sCmn.pitchEstimationLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationThreshold_Q16 = 45875;
            through_psEnc.sCmn.LTPQuantLowComplexity = 0;
            through_psEnc.sCmn.mu_LTP_Q9 = 15;
            through_psEnc.sCmn.sum_log_gain_Q7 = 0;
            through_psEnc.sCmn.NLSF_MSVQ_Survivors = 32;
            through_psEnc.sCmn.first_frame_after_reset = 0;
            through_psEnc.sCmn.controlled_since_last_payload = 1;
            through_psEnc.sCmn.warping_Q16 = 7864;
            through_psEnc.sCmn.useCBR = 0;
            through_psEnc.sCmn.prefillFlag = 0;
            through_psEnc.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            through_psEnc.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            through_psEnc.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            through_psEnc.sCmn.psNLSF_CB.nVectors = 32;
            through_psEnc.sCmn.psNLSF_CB.order = 10;
            through_psEnc.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            through_psEnc.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            through_psEnc.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            through_psEnc.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            through_psEnc.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            through_psEnc.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            through_psEnc.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            through_psEnc.sCmn.input_tilt_Q15 = 32766;
            through_psEnc.sCmn.SNR_dB_Q7 = 1768;
            through_psEnc.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            through_psEnc.sCmn.LBRR_flag = 0;
            through_psEnc.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            through_psEnc.sCmn.indices = new SideInfoIndices();
            through_psEnc.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.lagIndex = 0;
            through_psEnc.sCmn.indices.contourIndex = 0;
            through_psEnc.sCmn.indices.signalType = 1;
            through_psEnc.sCmn.indices.quantOffsetType = 1;
            through_psEnc.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            through_psEnc.sCmn.indices.PERIndex = 0;
            through_psEnc.sCmn.indices.LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices.Seed = 3;
            through_psEnc.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.arch = 0;
            through_psEnc.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.inputBufIx = 160;
            through_psEnc.sCmn.nFramesPerPacket = 2;
            through_psEnc.sCmn.nFramesEncoded = 0;
            through_psEnc.sCmn.nChannelsAPI = 2;
            through_psEnc.sCmn.nChannelsInternal = 1;
            through_psEnc.sCmn.channelNb = 0;
            through_psEnc.sCmn.frames_since_onset = 0;
            through_psEnc.sCmn.ec_prevSignalType = 1;
            through_psEnc.sCmn.ec_prevLagIndex = 0;
            through_psEnc.sCmn.useDTX = 0;
            through_psEnc.sCmn.inDTX = 0;
            through_psEnc.sCmn.noSpeechCounter = 0;
            through_psEnc.sCmn.useInBandFEC = 1;
            through_psEnc.sCmn.LBRR_enabled = 0;
            through_psEnc.sCmn.LBRR_GainIncreases = 0;
            through_psEnc.sCmn.indices_LBRR[0] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[0].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[0].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[1] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[1].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[1].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[2] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[2].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[2].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].Seed = 0;
            through_psEnc.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sShape = new silk_shape_state();
            through_psEnc.sShape.LastGainIndex = 32;
            through_psEnc.sShape.HarmBoost_smth_Q16 = 1678;
            through_psEnc.sShape.HarmShapeGain_smth_Q16 = 0;
            through_psEnc.sShape.Tilt_smth_Q16 = -16110;
            through_psEnc.sPrefilt = new silk_prefilter_state();
            through_psEnc.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            through_psEnc.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            through_psEnc.sPrefilt.sLTP_shp_buf_idx = 192;
            through_psEnc.sPrefilt.sLF_AR_shp_Q12 = -69973;
            through_psEnc.sPrefilt.sLF_MA_shp_Q12 = -77681;
            through_psEnc.sPrefilt.sHarmHP_Q2 = -111;
            through_psEnc.sPrefilt.rand_seed = 0;
            through_psEnc.sPrefilt.lagPrev = 0;
            through_psEnc.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            through_psEnc.LTPCorr_Q15 = 0;
            silk_encoder_control through_sEncCtrl = new silk_encoder_control();
            through_sEncCtrl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            through_sEncCtrl.LTP_scale_Q14 = -858993460;
            through_sEncCtrl.pitchL = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Lambda_Q10 = -858993460;
            through_sEncCtrl.input_quality_Q14 = -858993460;
            through_sEncCtrl.coding_quality_Q14 = -858993460;
            through_sEncCtrl.sparseness_Q8 = -858993460;
            through_sEncCtrl.predGain_Q16 = -858993460;
            through_sEncCtrl.LTPredCodGain_Q7 = -858993460;
            through_sEncCtrl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.lastGainIndexPrev = -52;
            Pointer<short> in_x_frame = Helpers.WrapWithArrayPointer<short>(
            new short[] { 50,18,-42,-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,
-95,-87,-65,-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,
22,52,-22,79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,
-42,43,-2,16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,
-41,-85,25,-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,
53,-12,34,32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,
-27,-36,-7,30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,
3,12,31,-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,
28,-16,-39,-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,
-85,-50,-76,-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,
-133,-154,-105,-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,
-101,-175,-48,-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,
682,603,778,861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,
3091,3371,3215,3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,
768,-103,-1005,-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,
-207,-314,-372,-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,
-1768,-1863,-1924,-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,
-1152,-860,-587,-358,-253,16384,-7,-6614,21,14894,-13,2659,-24,-22877,3,20123,9,
9732,-2,30461,-22,-1153,1,-28385,-3,9293,0,-6287,-11,9417,-10,11928,10,8577,
2,3584,-8,-6194,-4,192,0,-4437,-2,-12145,-2,-111,-1,0,0,0,0,
-163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-3072,2,-3072,2,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,25600,0,25600,0,25600,0,25600,
0,0,0,5000,0,2500,0,1600,0,1200,0,-29256,6,7025,13,31457,20,
20097,27,50,0,25,0,16,0,12,0,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            in_x_frame = in_x_frame.Point(500);
            #endregion
            int in_condCoding = 0;
            Pointer<short> res_pitch = Pointer.Malloc<short>(through_psEnc.sCmn.la_pitch + through_psEnc.sCmn.frame_length + through_psEnc.sCmn.ltp_mem_length);
            Pointer<short> res_pitch_frame = res_pitch.Point(through_psEnc.sCmn.ltp_mem_length);
            find_pitch_lags.silk_find_pitch_lags_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            silk_encoder_state_fix expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1678;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16110;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            silk_encoder_control expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = -858993460;
            expectedControl.coding_quality_Q14 = -858993460;
            expectedControl.sparseness_Q8 = -858993460;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            noise_shape_analysis.silk_noise_shape_analysis_FIX(through_psEnc, through_sEncCtrl, res_pitch_frame, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 2539, 6076, 9227, 11752, 14352, 18176, 21120, 23808, 26752, 29312, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 10, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 3;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 216690090, 265200823, 265689941, 284592870 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6152,-2039,811,-564,163,-314,162,-282,102,-196,57,-124,47,-120,49,-97,6430,
-1979,861,-491,205,-255,196,-232,123,-172,89,-113,71,-115,64,-89,6504,-1907,
808,-459,185,-186,96,-113,55,-100,36,-80,68,-102,75,-76,6437,-1951,858,
-514,201,-176,85,-129,72,-115,70,-109,88,-98,60,-49});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6258,-2112,856,-606,178,-350,184,-326,120,-234,70,-154,60,-154,64,-129,6539,
-2050,909,-527,224,-284,222,-267,144,-206,109,-140,90,-148,84,-118,6614,-1976,
853,-493,202,-207,109,-130,65,-120,44,-99,86,-131,98,-102,6546,-2021,906,
-551,220,-196,97,-149,85,-138,86,-135,112,-126,79,-65});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 529713766, 529713766, 529713766, 529713766 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17168, 17145, 17133, 17161 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 388, 369, 358, 351 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -4055, -4071, -4081, -4087 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12972;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            find_pred_coefs.silk_find_pred_coefs_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 32;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 216690090, 265200823, 265689941, 284592870 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 4516,-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108,4516,
-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6152,-2039,811,-564,163,-314,162,-282,102,-196,57,-124,47,-120,49,-97,6430,
-1979,861,-491,205,-255,196,-232,123,-172,89,-113,71,-115,64,-89,6504,-1907,
808,-459,185,-186,96,-113,55,-100,36,-80,68,-102,75,-76,6437,-1951,858,
-514,201,-176,85,-129,72,-115,70,-109,88,-98,60,-49});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6258,-2112,856,-606,178,-350,184,-326,120,-234,70,-154,60,-154,64,-129,6539,
-2050,909,-527,224,-284,222,-267,144,-206,109,-140,90,-148,84,-118,6614,-1976,
853,-493,202,-207,109,-130,65,-120,44,-99,86,-131,98,-102,6546,-2021,906,
-551,220,-196,97,-149,85,-138,86,-135,112,-126,79,-65});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 529713766, 529713766, 529713766, 529713766 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17168, 17145, 17133, 17161 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 388, 369, 358, 351 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -4055, -4071, -4081, -4087 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 12972;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 190720000, 407912787, 406701927, 127334592 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 11, 0, 0, 4 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            process_gains.silk_process_gains_FIX(through_psEnc, through_sEncCtrl, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -442368,1435178,-837074,-1570205,239267,609947,-121340,-1411331,129919,-159457,9293,-661647,-645943,
667288,139649,-520704,-202802});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 192;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -69973;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -77681;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -111;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 185597952, 480247808, 480247808, 295698432 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 4516,-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108,4516,
-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6152,-2039,811,-564,163,-314,162,-282,102,-196,57,-124,47,-120,49,-97,6430,
-1979,861,-491,205,-255,196,-232,123,-172,89,-113,71,-115,64,-89,6504,-1907,
808,-459,185,-186,96,-113,55,-100,36,-80,68,-102,75,-76,6437,-1951,858,
-514,201,-176,85,-129,72,-115,70,-109,88,-98,60,-49});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6258,-2112,856,-606,178,-350,184,-326,120,-234,70,-154,60,-154,64,-129,6539,
-2050,909,-527,224,-284,222,-267,144,-206,109,-140,90,-148,84,-118,6614,-1976,
853,-493,202,-207,109,-130,65,-120,44,-99,86,-131,98,-102,6546,-2021,906,
-551,220,-196,97,-149,85,-138,86,-135,112,-126,79,-65});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 529713766, 529713766, 529713766, 529713766 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17168, 17145, 17133, 17161 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 388, 369, 358, 351 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -4055, -4071, -4081, -4087 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 785;
            expectedControl.input_quality_Q14 = 12972;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 190720000, 407912787, 406701927, 127334592 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 11, 0, 0, 4 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 212598784, 540344320, 540344320, 288489472 });
            expectedControl.lastGainIndexPrev = 32;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Pointer<int> xfw_Q3 = Pointer.Malloc<int>(through_psEnc.sCmn.frame_length);
            prefilter.silk_prefilter_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_x_frame);
            #region autogen
            int[] expected_xfw_Q3_1 =
            new int[] { 48,64,406,-446,-385,62,-278,225,0,-205,-608,239,-738,
-363,18,-759,15,-466,-167,-322,79,-39,-110,-556,-390,-33,
270,287,30,78,276,-401,159,53,-252,-623,33,-230,-492,
1,201,-1105,823,-150,2079,-6544,57493,182489,73734,78048,47498,40904,
26687,18582,9664,2454,-2332,-9165,-12006,-16473,-18957,-20993,-22639,-25284,-24467,
-27287,-25664,-26999,-25762,-27547,-25884,-27731,-26648,-26571,-26414,-25594,-25333,-24474,
-23068,-22523,-20750,-20124,-18478,-16742,-16063,-15099,-13162,-12833,-11996,-10441,-9086,
-9033,-7140,-7017,-6061,-5336,-4018,-3899,-2997,-1215,-2249,-1460,-744,-121,
1140,775,1291,2155,479,8907,-54294,-179975,-67762,-69948,-40144,-33033,-18913,
-10750,-3233,4251,9503,15219,17948,22695,24375,28719,28942,31130,31598,33019,
32655,34270,32599,34019,32719,32758,31381,32106,29721,28703,29080,26986,26890,
24921,23526,22339,21168,19886,19316,17156,16027,15198,14057,13385,12245,11010,
10047,8995,6955,7322};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 185597952, 480247808, 480247808, 295698432 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 4516,-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108,4516,
-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6152,-2039,811,-564,163,-314,162,-282,102,-196,57,-124,47,-120,49,-97,6430,
-1979,861,-491,205,-255,196,-232,123,-172,89,-113,71,-115,64,-89,6504,-1907,
808,-459,185,-186,96,-113,55,-100,36,-80,68,-102,75,-76,6437,-1951,858,
-514,201,-176,85,-129,72,-115,70,-109,88,-98,60,-49});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6258,-2112,856,-606,178,-350,184,-326,120,-234,70,-154,60,-154,64,-129,6539,
-2050,909,-527,224,-284,222,-267,144,-206,109,-140,90,-148,84,-118,6614,-1976,
853,-493,202,-207,109,-130,65,-120,44,-99,86,-131,98,-102,6546,-2021,906,
-551,220,-196,97,-149,85,-138,86,-135,112,-126,79,-65});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 529713766, 529713766, 529713766, 529713766 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17168, 17145, 17133, 17161 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 388, 369, 358, 351 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -4055, -4071, -4081, -4087 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 785;
            expectedControl.input_quality_Q14 = 12972;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 190720000, 407912787, 406701927, 127334592 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 11, 0, 0, 4 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 212598784, 540344320, 540344320, 288489472 });
            expectedControl.lastGainIndexPrev = 32;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_1, xfw_Q3);
            encode_frame.silk_LBRR_encode_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_condCoding);
            #region autogen
            int[] expected_xfw_Q3_2 =
            new int[] { 48,64,406,-446,-385,62,-278,225,0,-205,-608,239,-738,
-363,18,-759,15,-466,-167,-322,79,-39,-110,-556,-390,-33,
270,287,30,78,276,-401,159,53,-252,-623,33,-230,-492,
1,201,-1105,823,-150,2079,-6544,57493,182489,73734,78048,47498,40904,
26687,18582,9664,2454,-2332,-9165,-12006,-16473,-18957,-20993,-22639,-25284,-24467,
-27287,-25664,-26999,-25762,-27547,-25884,-27731,-26648,-26571,-26414,-25594,-25333,-24474,
-23068,-22523,-20750,-20124,-18478,-16742,-16063,-15099,-13162,-12833,-11996,-10441,-9086,
-9033,-7140,-7017,-6061,-5336,-4018,-3899,-2997,-1215,-2249,-1460,-744,-121,
1140,775,1291,2155,479,8907,-54294,-179975,-67762,-69948,-40144,-33033,-18913,
-10750,-3233,4251,9503,15219,17948,22695,24375,28719,28942,31130,31598,33019,
32655,34270,32599,34019,32719,32758,31381,32106,29721,28703,29080,26986,26890,
24921,23526,22339,21168,19886,19316,17156,16027,15198,14057,13385,12245,11010,
10047,8995,6955,7322};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -3283416, -3116187 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -6134573, -3279000 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 2660473, -2791498 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 645910, 421769, 492377, 627633 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 34648, 43974, 43877, 31793 });
            expectedEncoder.sCmn.sVAD.HPstate = -3680;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 809, 312, 410, 1414 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 2654467, 6877144, 5227205, 1518569 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 19;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -81,-624,-671,-654,-95,123,-412,100,121,-380,233,-325,-440,-410,119,268,-290,
258,221,309,463,423,-155,326,469,465,586,529,-74,420,-55,-204,410,409,
493,520,504,491,555,10,-12,-25,244,27,259,283,228,-3,-106,186,-101,
-104,-147,92,188,-106,170,-166,-200,146,-160,142,182,-140,148,-138,-182,442,
-77,-141,148,141,-100,-128,135,132,-82,-130,95,154,132,124,-122,60,-58,
-53,125,-95,-78,85,-91,-79,-76,63,76,95,-84,-126,81,-82,-57,-77,
214,-85,-81,-77,-146,-60,98,85,-114,-98,54,70,-53,-78,-123,60,-60,
97,38,-85,51,-59,-38,54,42,-47,-48,-49,32,-29,-39,123,-64,-42,
-41,-67,54,53,-44,-62,-58,38,-35,-36,-57,19,-42,46,46,-68,-44,
35,-47,54,-126,-66,43,39,-81,-624,-671,-654,-95,123,-412,100,121,-380,
233,-325,-440,-410,119,268,-290,258,221,309,463,423,-155,326,469,465,586,
529,-74,420,-55,-204,410,409,493,520,504,491,555,10,-12,-25,244,27,
259,283,228,-3,-106,186,-101,-104,-147,92,188,-106,170,-166,-200,146,-160,
142,182,-140,148,-138,-182,442,-77,-141,148,141,-100,-128,135,132,-82,-130,
95,154,132,124,-122,60,-58,-53,125,-95,-78,85,-91,-79,-76,63,76,
95,-84,-126,81,-82,-57,-77,214,-85,-81,-77,-146,-60,98,85,-114,-98,
54,70,-53,-78,-123,60,-60,97,38,-85,51,-59,-38,54,42,-47,-48,
-49,32,-29,-39,123,-64,-42,-41,-67,54,53,-44,-62,-58,38,-35,-36,
-57,19,-42,46,46,-68,-44,35,-47,54,-126,-66,43,39,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,-26053,8019,-26525,-26713,
-26396,19976,27496,-20771,21823,13852,30874,18787,19183,-22964,12321,22719,12586,
28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,16886,15698,8150,20423,
-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,-24103,3129,-3556,-13892,
-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,7276,23819,1367,4596,
-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,4822,14524,831,-17292,
-284,19419,17659,14304,-248,7159,-1029,-8849,5035,-3731,-10665,2461,-2672,
-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,-11776,-13067,13501,2093,
-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,8308,-3033,-11551,-14523,
82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,3008,-2300,-4072,-5668,
236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,3104,-1796,-3504,-6024,
-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,-3520,1152,-3784,3096,
-9856,-9256,160,1616,49455,-12857,-21906,-25024,28579,52066,-7367,29026,24778,
-26053,8019,-26525,-26713,-26396,19976,27496,-20771,21823,13852,30874,18787,19183,
-22964,12321,22719,12586,28290,14115,-36821,-558,-38324,-48801,21982,25254,27284,
16886,15698,8150,20423,-33704,-28081,-16150,3594,-18124,-7350,6345,9011,-9661,
-24103,3129,-3556,-13892,-21212,1253,14736,-9690,1705,-9380,-18039,3990,-5896,
7276,23819,1367,4596,-4275,-20803,24678,14511,-15091,6542,24284,-8547,-19915,
4822,14524,831,-17292,-284,19419,17659,14304,-248,7159,-1029,-8849,5035,
-3731,-10665,2461,-2672,-9029,-11311,1013,9756,12713,-766,-10943,2138,-5682,
-11776,-13067,13501,2093,-9847,-10996,-14726,-13029,-38,8916,-4121,-10965,165,
8308,-3033,-11551,-14523,82,-4774,2251,6760,-2940,5048,-3176,-3248,3352,
3008,-2300,-4072,-5668,236,-3424,-4544,10308,-652,-2436,-3888,-7876,1148,
3104,-1796,-3504,-6024,-72,-3812,-4420,-5124,-280,-3756,2500,5956,-2420,
-3520,1152,-3784,3096,-9856,-9256,160,1616,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -4096,-4128,2688,-2480,-3296,10368,-5408,-3536,-3440,-5632,4544,4480,-3728,
-5264,-4880,3216,-2960,-3040,-4784,1632,-3536,3888,3872,-5760,-3712,2992,
-4000,4576,-10672,-5600,3632,3296,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { 2813,-8213,-7137,5715,-5178,1509,-6177,4311,3280,-6198,-2224,-2181,-4281,
2018,-6019,-2170});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 2072;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 12713984;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 4;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 25332, 26556, 26556, 24873 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 1;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 3;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,
-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,
-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,
-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,166,220,351,311,319,
401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,
4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,
2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,773,695,586,503,418,
210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,
23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,
-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -163,-169,-86,-155,-215,-177,-143,-177,-42,-83,-76,-101,-32,-53,-59,-92,-111,
-86,-25,-28,-89,-57,95,4,-24,-3,-87,-68,25,-27,-65,-60,18,11,
5,-51,-53,-46,59,-1,129,34,19,-45,-8,44,28,-12,67,-45,44,
77,40,43,-37,-15,56,-40,101,-2,8,80,-30,56,-91,-9,64,-19,
-14,68,-5,16,23,-29,64,-39,-30,20,-53,55,-13,42,-66,-21,73,
7,42,-46,13,-59,36,-55,9,37,9,54,41,-57,68,-13,34,-27,
74,-20,-7,23,36,-57,-16,-45,-119,26,43,-47,-41,-69,-66,36,16,
62,13,29,-60,20,-21,33,-32,9,-31,46,-23,-41,18,45,-85,-93,
-7,1,20,-18,6,-74,30,40,-34,13,-73,-12,27,-17,-30,-37,-46,
64,12,-36,-99,-16,91,-27,-17,5,50,-40,-64,-2,-25,27,17,-16,
-72,17,-67,-57,9,-70,0,-31,-10,-17,23,24,6,-51,-49,4,51,
63,26,18,39,-39,2,10,-31,-84,-16,-18,-58,-4,37,-111,70,26,
253,-699,6628,23823,14849,10394,5944,3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,
-3943,-3882,-3864,-3542,-3603,-3357,-3295,-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,
-1629,-1526,-1396,-1353,-1222,-1037,-975,-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,
-144,-26,-23,27,217,102,105,166,220,351,311,319,401,194,1106,-6173,-23505,
-14420,-9892,-5499,-2695,-446,1265,2249,3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,
3976,3783,3779,3489,3448,3227,3074,2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,
1426,1307,1272,1077,944,892,808,773,695,586,503,418,210,255,239,90,83,
0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,
545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,
-3452,-3217,-3097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 185597952, 480247808, 480247808, 295698432 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 4516,-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108,4516,
-1568,790,-618,538,-367,284,-293,240,-176,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6152,-2039,811,-564,163,-314,162,-282,102,-196,57,-124,47,-120,49,-97,6430,
-1979,861,-491,205,-255,196,-232,123,-172,89,-113,71,-115,64,-89,6504,-1907,
808,-459,185,-186,96,-113,55,-100,36,-80,68,-102,75,-76,6437,-1951,858,
-514,201,-176,85,-129,72,-115,70,-109,88,-98,60,-49});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6258,-2112,856,-606,178,-350,184,-326,120,-234,70,-154,60,-154,64,-129,6539,
-2050,909,-527,224,-284,222,-267,144,-206,109,-140,90,-148,84,-118,6614,-1976,
853,-493,202,-207,109,-130,65,-120,44,-99,86,-131,98,-102,6546,-2021,906,
-551,220,-196,97,-149,85,-138,86,-135,112,-126,79,-65});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 529713766, 529713766, 529713766, 529713766 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17168, 17145, 17133, 17161 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 388, 369, 358, 351 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -4055, -4071, -4081, -4087 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.Lambda_Q10 = 785;
            expectedControl.input_quality_Q14 = 12972;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 255;
            expectedControl.predGain_Q16 = 96758;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 190720000, 407912787, 406701927, 127334592 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 11, 0, 0, 4 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 212598784, 540344320, 540344320, 288489472 });
            expectedControl.lastGainIndexPrev = 32;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_2, xfw_Q3);
        }

        [TestMethod]
        public void Test_silk_encode_frame_internal_19()
        {
            #region autogen
            silk_encoder_state_fix through_psEnc = new silk_encoder_state_fix();
            through_psEnc.sCmn = new silk_encoder_state();
            through_psEnc.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.variable_HP_smth1_Q15 = 193536;
            through_psEnc.sCmn.variable_HP_smth2_Q15 = 193536;
            through_psEnc.sCmn.sLP = new silk_LP_state();
            through_psEnc.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.sLP.transition_frame_no = 0;
            through_psEnc.sCmn.sLP.mode = 0;
            through_psEnc.sCmn.sVAD = new silk_VAD_state();
            through_psEnc.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            through_psEnc.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            through_psEnc.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            through_psEnc.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            through_psEnc.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            through_psEnc.sCmn.sVAD.HPstate = -94;
            through_psEnc.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            through_psEnc.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            through_psEnc.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            through_psEnc.sCmn.sVAD.counter = 20;
            through_psEnc.sCmn.sNSQ = new silk_nsq_state();
            through_psEnc.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            through_psEnc.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            through_psEnc.sCmn.sNSQ.lagPrev = 0;
            through_psEnc.sCmn.sNSQ.sLTP_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.rand_seed = 0;
            through_psEnc.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            through_psEnc.sCmn.sNSQ.rewhite_flag = 0;
            through_psEnc.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            through_psEnc.sCmn.speech_activity_Q8 = 255;
            through_psEnc.sCmn.allow_bandwidth_switch = 0;
            through_psEnc.sCmn.LBRRprevLastGainIndex = 0;
            through_psEnc.sCmn.prevSignalType = 1;
            through_psEnc.sCmn.prevLag = 0;
            through_psEnc.sCmn.pitch_LPC_win_length = 192;
            through_psEnc.sCmn.max_pitch_lag = 144;
            through_psEnc.sCmn.API_fs_Hz = 48000;
            through_psEnc.sCmn.prev_API_fs_Hz = 48000;
            through_psEnc.sCmn.maxInternal_fs_Hz = 16000;
            through_psEnc.sCmn.minInternal_fs_Hz = 8000;
            through_psEnc.sCmn.desiredInternal_fs_Hz = 8000;
            through_psEnc.sCmn.fs_kHz = 8;
            through_psEnc.sCmn.nb_subfr = 4;
            through_psEnc.sCmn.frame_length = 160;
            through_psEnc.sCmn.subfr_length = 40;
            through_psEnc.sCmn.ltp_mem_length = 160;
            through_psEnc.sCmn.la_pitch = 16;
            through_psEnc.sCmn.la_shape = 40;
            through_psEnc.sCmn.shapeWinLength = 120;
            through_psEnc.sCmn.TargetRate_bps = 7134;
            through_psEnc.sCmn.PacketSize_ms = 40;
            through_psEnc.sCmn.PacketLoss_perc = 12;
            through_psEnc.sCmn.frameCounter = 5;
            through_psEnc.sCmn.Complexity = 10;
            through_psEnc.sCmn.nStatesDelayedDecision = 4;
            through_psEnc.sCmn.useInterpolatedNLSFs = 1;
            through_psEnc.sCmn.shapingLPCOrder = 16;
            through_psEnc.sCmn.predictLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationComplexity = 2;
            through_psEnc.sCmn.pitchEstimationLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationThreshold_Q16 = 45875;
            through_psEnc.sCmn.LTPQuantLowComplexity = 0;
            through_psEnc.sCmn.mu_LTP_Q9 = 15;
            through_psEnc.sCmn.sum_log_gain_Q7 = 0;
            through_psEnc.sCmn.NLSF_MSVQ_Survivors = 32;
            through_psEnc.sCmn.first_frame_after_reset = 0;
            through_psEnc.sCmn.controlled_since_last_payload = 0;
            through_psEnc.sCmn.warping_Q16 = 7864;
            through_psEnc.sCmn.useCBR = 0;
            through_psEnc.sCmn.prefillFlag = 0;
            through_psEnc.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            through_psEnc.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            through_psEnc.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            through_psEnc.sCmn.psNLSF_CB.nVectors = 32;
            through_psEnc.sCmn.psNLSF_CB.order = 10;
            through_psEnc.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            through_psEnc.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            through_psEnc.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            through_psEnc.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            through_psEnc.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            through_psEnc.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            through_psEnc.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            through_psEnc.sCmn.input_tilt_Q15 = 32766;
            through_psEnc.sCmn.SNR_dB_Q7 = 1779;
            through_psEnc.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            through_psEnc.sCmn.LBRR_flag = 0;
            through_psEnc.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            through_psEnc.sCmn.indices = new SideInfoIndices();
            through_psEnc.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            through_psEnc.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.lagIndex = 0;
            through_psEnc.sCmn.indices.contourIndex = 0;
            through_psEnc.sCmn.indices.signalType = 1;
            through_psEnc.sCmn.indices.quantOffsetType = 0;
            through_psEnc.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            through_psEnc.sCmn.indices.PERIndex = 0;
            through_psEnc.sCmn.indices.LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices.Seed = 0;
            through_psEnc.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.arch = 0;
            through_psEnc.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.inputBufIx = 160;
            through_psEnc.sCmn.nFramesPerPacket = 2;
            through_psEnc.sCmn.nFramesEncoded = 1;
            through_psEnc.sCmn.nChannelsAPI = 2;
            through_psEnc.sCmn.nChannelsInternal = 1;
            through_psEnc.sCmn.channelNb = 0;
            through_psEnc.sCmn.frames_since_onset = 0;
            through_psEnc.sCmn.ec_prevSignalType = 1;
            through_psEnc.sCmn.ec_prevLagIndex = 0;
            through_psEnc.sCmn.useDTX = 0;
            through_psEnc.sCmn.inDTX = 0;
            through_psEnc.sCmn.noSpeechCounter = 0;
            through_psEnc.sCmn.useInBandFEC = 1;
            through_psEnc.sCmn.LBRR_enabled = 0;
            through_psEnc.sCmn.LBRR_GainIncreases = 0;
            through_psEnc.sCmn.indices_LBRR[0] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[0].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[0].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[1] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[1].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[1].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[2] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[2].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[2].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].Seed = 0;
            through_psEnc.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sShape = new silk_shape_state();
            through_psEnc.sShape.LastGainIndex = 52;
            through_psEnc.sShape.HarmBoost_smth_Q16 = 1404;
            through_psEnc.sShape.HarmShapeGain_smth_Q16 = 0;
            through_psEnc.sShape.Tilt_smth_Q16 = -16350;
            through_psEnc.sPrefilt = new silk_prefilter_state();
            through_psEnc.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            through_psEnc.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            through_psEnc.sPrefilt.sLTP_shp_buf_idx = 32;
            through_psEnc.sPrefilt.sLF_AR_shp_Q12 = 804349;
            through_psEnc.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            through_psEnc.sPrefilt.sHarmHP_Q2 = 727;
            through_psEnc.sPrefilt.rand_seed = 0;
            through_psEnc.sPrefilt.lagPrev = 0;
            through_psEnc.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            through_psEnc.LTPCorr_Q15 = 0;
            silk_encoder_control through_sEncCtrl = new silk_encoder_control();
            through_sEncCtrl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            through_sEncCtrl.LTP_scale_Q14 = -858993460;
            through_sEncCtrl.pitchL = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Lambda_Q10 = -858993460;
            through_sEncCtrl.input_quality_Q14 = -858993460;
            through_sEncCtrl.coding_quality_Q14 = -858993460;
            through_sEncCtrl.sparseness_Q8 = -858993460;
            through_sEncCtrl.predGain_Q16 = -858993460;
            through_sEncCtrl.LTPredCodGain_Q7 = -858993460;
            through_sEncCtrl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.lastGainIndexPrev = -52;
            Pointer<short> in_x_frame = Helpers.WrapWithArrayPointer<short>(
            new short[] { 50,18,-42,-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,
-95,-87,-65,-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,
22,52,-22,79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,
-42,43,-2,16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,
-41,-85,25,-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,
53,-12,34,32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,
-27,-36,-7,30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,
3,12,31,-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,
28,-16,-39,-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,
-85,-50,-76,-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,
-133,-154,-105,-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,
-101,-175,-48,-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,
682,603,778,861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,
3091,3371,3215,3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,
768,-103,-1005,-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,
-207,-314,-372,-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,
-1768,-1863,-1924,-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,
-1152,-860,-587,-358,-253,-16384,63,9488,67,22002,132,15104,159,14654,192,-27847,224,
-28226,242,-5549,266,9382,308,15322,353,6695,407,10870,431,-10313,475,-15991,547,-15506,
592,-31595,652,7353,685,32,0,17917,12,13081,57,727,0,0,0,0,0,
-17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-3072,2,-3072,2,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,25600,0,25600,0,25600,0,25600,
0,0,0,5000,0,2500,0,1600,0,1200,0,-29256,6,7025,13,31457,20,
20097,27,50,0,25,0,16,0,12,0,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            in_x_frame = in_x_frame.Point(500);
            #endregion
            int in_condCoding = 2;
            Pointer<short> res_pitch = Pointer.Malloc<short>(through_psEnc.sCmn.la_pitch + through_psEnc.sCmn.frame_length + through_psEnc.sCmn.ltp_mem_length);
            Pointer<short> res_pitch_frame = res_pitch.Point(through_psEnc.sCmn.ltp_mem_length);
            find_pitch_lags.silk_find_pitch_lags_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            silk_encoder_state_fix expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1404;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 0;
            expectedEncoder.sShape.Tilt_smth_Q16 = -16350;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            silk_encoder_control expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = -858993460;
            expectedControl.coding_quality_Q14 = -858993460;
            expectedControl.sparseness_Q8 = -858993460;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            noise_shape_analysis.silk_noise_shape_analysis_FIX(through_psEnc, through_sEncCtrl, res_pitch_frame, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1920, 4096, 7040, 9856, 12928, 16000, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 0;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 246194169, 264982561, 236724626, 11612810 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6550,-1974,941,-543,242,-165,107,-153,110,-157,145,-161,128,-125,59,-46,6499,
-1909,860,-514,247,-230,146,-139,72,-135,116,-118,63,-72,47,-48,6512,-1878,
833,-494,244,-228,150,-129,67,-130,109,-108,52,-71,54,-64,8512,331,-1560,
-615,258,384,-532,412,-687,871,-353,-386,283,485,-720,258});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6661,-2045,993,-584,264,-184,121,-177,129,-188,176,-200,162,-160,78,-61,6610,
-1978,908,-552,270,-256,166,-160,85,-162,141,-147,80,-93,62,-64,6622,-1946,
879,-530,267,-254,170,-149,79,-156,133,-134,66,-92,71,-86,8646,345,-1641,
-660,280,428,-604,476,-809,1041,-428,-479,355,624,-942,343});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 835896089, 835896089, 835896089, 834978588 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17129, 17137, 17128, 14545 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 729, 956, 1092, 1174 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -5804, -6835, -7453, -7824 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2051, 3282, 4021, 4464 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 0;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            find_pred_coefs.silk_find_pred_coefs_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 49, 10, 4, 1 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 52;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 246194169, 264982561, 236724626, 11612810 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 5254,-1828,415,-690,759,-494,195,-140,493,-446,-13108,-13108,-13108,-13108,-13108,-13108,5967,
-2169,11,-677,1062,-663,23,10,797,-704,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -128,512,15872,256,-512,-128,512,15872,256,-512,-768,2944,14976,-1536,384,384,256,
1664,384,256});
            expectedControl.LTP_scale_Q14 = 15565;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6550,-1974,941,-543,242,-165,107,-153,110,-157,145,-161,128,-125,59,-46,6499,
-1909,860,-514,247,-230,146,-139,72,-135,116,-118,63,-72,47,-48,6512,-1878,
833,-494,244,-228,150,-129,67,-130,109,-108,52,-71,54,-64,8512,331,-1560,
-615,258,384,-532,412,-687,871,-353,-386,283,485,-720,258});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6661,-2045,993,-584,264,-184,121,-177,129,-188,176,-200,162,-160,78,-61,6610,
-1978,908,-552,270,-256,166,-160,85,-162,141,-147,80,-93,62,-64,6622,-1946,
879,-530,267,-254,170,-149,79,-156,133,-134,66,-92,71,-86,8646,345,-1641,
-660,280,428,-604,476,-809,1041,-428,-479,355,624,-942,343});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 835896089, 835896089, 835896089, 834978588 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17129, 17137, 17128, 14545 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 729, 956, 1092, 1174 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -5804, -6835, -7453, -7824 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2051, 3282, 4021, 4464 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 0;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = 45;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 148571136, 170654848, 148436064, 125340672 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 6, 7, 5, 5 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            process_gains.silk_process_gains_FIX(through_psEnc, through_sEncCtrl, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,-107,-105,-128,-115,-133,-154,-105,
-150,-153,-231,-268,-178,-292,-177,-133,-186,-238,-92,-192,-86,-168,-101,-175,-48,
-46,30,-37,35,27,62,165,134,221,106,410,292,396,488,682,603,778,
861,1000,1048,1362,1539,1706,2025,2480,2752,2695,3014,3006,2947,3326,3091,3371,3215,
3441,3283,3448,3341,3577,3298,3394,3071,3137,2688,2632,2086,1907,1188,768,-103,-1005,
-1870,-3447,-3911,-7712,-6347,-22050,-7009,1098,-174,76,72,20,-73,-221,-207,-314,-372,
-391,-497,-572,-782,-719,-907,-974,-1035,-1159,-1372,-1394,-1447,-1595,-1621,-1768,-1863,-1924,
-2033,-2011,-2124,-2190,-2292,-2224,-2291,-2376,-2250,-2251,-2123,-1939,-1667,-1423,-1152,-860,-587,
-358,-253});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { 4177920,4400400,8672754,10435328,12597566,14717753,15897022,17492563,20194470,23149530,26679847,28256886,31184823,
35897737,38847342,42763413,44899513});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 32;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = 804349;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 3748633;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = 727;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 253755392, 253755392, 253755392, 135266304 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 5254,-1828,415,-690,759,-494,195,-140,493,-446,-13108,-13108,-13108,-13108,-13108,-13108,5967,
-2169,11,-677,1062,-663,23,10,797,-704,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -128,512,15872,256,-512,-128,512,15872,256,-512,-768,2944,14976,-1536,384,384,256,
1664,384,256});
            expectedControl.LTP_scale_Q14 = 15565;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6550,-1974,941,-543,242,-165,107,-153,110,-157,145,-161,128,-125,59,-46,6499,
-1909,860,-514,247,-230,146,-139,72,-135,116,-118,63,-72,47,-48,6512,-1878,
833,-494,244,-228,150,-129,67,-130,109,-108,52,-71,54,-64,8512,331,-1560,
-615,258,384,-532,412,-687,871,-353,-386,283,485,-720,258});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6661,-2045,993,-584,264,-184,121,-177,129,-188,176,-200,162,-160,78,-61,6610,
-1978,908,-552,270,-256,166,-160,85,-162,141,-147,80,-93,62,-64,6622,-1946,
879,-530,267,-254,170,-149,79,-156,133,-134,66,-92,71,-86,8646,345,-1641,
-660,280,428,-604,476,-809,1041,-428,-479,355,624,-942,343});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 835896089, 835896089, 835896089, 834978588 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17129, 17137, 17128, 14545 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 729, 956, 1092, 1174 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -5804, -6835, -7453, -7824 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2051, 3282, 4021, 4464 });
            expectedControl.Lambda_Q10 = 727;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 0;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = 45;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 148571136, 170654848, 148436064, 125340672 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 6, 7, 5, 5 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 238419968, 256901120, 231669760, 47382528 });
            expectedControl.lastGainIndexPrev = 52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Pointer<int> xfw_Q3 = Pointer.Malloc<int>(through_psEnc.sCmn.frame_length);
            prefilter.silk_prefilter_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_x_frame);
            #region autogen
            int[] expected_xfw_Q3_1 =
            new int[] { 6849,5693,5976,5123,5184,3846,4253,3377,4281,2638,1488,2341,3555,
-7437,49773,163478,42317,50602,24100,24862,18319,14097,10654,6979,5248,867,
-566,-4704,-5176,-9327,-9270,-12381,-13077,-16911,-16332,-17969,-18802,-20924,-20868,
-22445,-21781,-23315,-23738,-24353,-25302,-24714,-25208,-25421,-25526,-25937,-25142,-24656,
-24677,-24591,-24248,-23702,-22930,-22261,-22420,-21354,-19859,-19746,-19996,-18107,-17308,
-16462,-16443,-15499,-13658,-13675,-13201,-12071,-10757,-10328,-10122,-8875,-11138,2297,
-51210,-165542,-55591,-62811,-35940,-35144,-26376,-23517,-19559,-15325,-12763,-8578,-6607,
-1915,-689,2989,3620,8623,9156,11729,12716,14914,15596,17892,18413,20908,
20544,22341,23322,24372,25137,24497,24815,25308,25291,25005,25910,25228,24587,
25105,24231,23502,21390,18569,18712,17562,17379,15475,15608,14778,13603,13428,
12193,11681,11587,10680,10189,9668,9448,8751,8425,8623,4839,-11144,-22238,
-15325,-6709,-3869,-970,348,326,1324,2939,2912,4230,4231,4774,5245,
5829,6492,6252,6397};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 253755392, 253755392, 253755392, 135266304 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 5254,-1828,415,-690,759,-494,195,-140,493,-446,-13108,-13108,-13108,-13108,-13108,-13108,5967,
-2169,11,-677,1062,-663,23,10,797,-704,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -128,512,15872,256,-512,-128,512,15872,256,-512,-768,2944,14976,-1536,384,384,256,
1664,384,256});
            expectedControl.LTP_scale_Q14 = 15565;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6550,-1974,941,-543,242,-165,107,-153,110,-157,145,-161,128,-125,59,-46,6499,
-1909,860,-514,247,-230,146,-139,72,-135,116,-118,63,-72,47,-48,6512,-1878,
833,-494,244,-228,150,-129,67,-130,109,-108,52,-71,54,-64,8512,331,-1560,
-615,258,384,-532,412,-687,871,-353,-386,283,485,-720,258});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6661,-2045,993,-584,264,-184,121,-177,129,-188,176,-200,162,-160,78,-61,6610,
-1978,908,-552,270,-256,166,-160,85,-162,141,-147,80,-93,62,-64,6622,-1946,
879,-530,267,-254,170,-149,79,-156,133,-134,66,-92,71,-86,8646,345,-1641,
-660,280,428,-604,476,-809,1041,-428,-479,355,624,-942,343});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 835896089, 835896089, 835896089, 834978588 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17129, 17137, 17128, 14545 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 729, 956, 1092, 1174 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -5804, -6835, -7453, -7824 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2051, 3282, 4021, 4464 });
            expectedControl.Lambda_Q10 = 727;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 0;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = 45;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 148571136, 170654848, 148436064, 125340672 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 6, 7, 5, 5 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 238419968, 256901120, 231669760, 47382528 });
            expectedControl.lastGainIndexPrev = 52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_1, xfw_Q3);
            encode_frame.silk_LBRR_encode_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_condCoding);
            #region autogen
            int[] expected_xfw_Q3_2 =
            new int[] { 6849,5693,5976,5123,5184,3846,4253,3377,4281,2638,1488,2341,3555,
-7437,49773,163478,42317,50602,24100,24862,18319,14097,10654,6979,5248,867,
-566,-4704,-5176,-9327,-9270,-12381,-13077,-16911,-16332,-17969,-18802,-20924,-20868,
-22445,-21781,-23315,-23738,-24353,-25302,-24714,-25208,-25421,-25526,-25937,-25142,-24656,
-24677,-24591,-24248,-23702,-22930,-22261,-22420,-21354,-19859,-19746,-19996,-18107,-17308,
-16462,-16443,-15499,-13658,-13675,-13201,-12071,-10757,-10328,-10122,-8875,-11138,2297,
-51210,-165542,-55591,-62811,-35940,-35144,-26376,-23517,-19559,-15325,-12763,-8578,-6607,
-1915,-689,2989,3620,8623,9156,11729,12716,14914,15596,17892,18413,20908,
20544,22341,23322,24372,25137,24497,24815,25308,25291,25005,25910,25228,24587,
25105,24231,23502,21390,18569,18712,17562,17379,15475,15608,14778,13603,13428,
12193,11681,11587,10680,10189,9668,9448,8751,8425,8623,4839,-11144,-22238,
-15325,-6709,-3869,-970,348,326,1324,2939,2912,4230,4231,4774,5245,
5829,6492,6252,6397};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193536;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { -240714, -81103 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -128284, -166370 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { -157298, -144916 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 229, 63, 80, 593 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -94;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 1078, 416, 547, 1884 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 1991230, 5158551, 3921018, 1139376 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 20;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { 321,606,835,462,548,260,365,144,268,611,249,-152,47,384,97,-290,-592,
-299,141,-97,105,437,136,-241,-548,-243,-365,-91,315,561,821,429,-39,-393,
-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,1095,386,7521,21669,14942,10448,2791,
444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,-5596,-4702,-3406,-1732,-2097,-2462,-1424,
-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,-401,-852,-1624,-2190,-1245,-1424,-2097,
-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,-594,530,1267,558,859,258,651,
1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,-14770,-9775,-2340,50,-308,966,-150,
-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,4891,4287,3027,1740,1657,859,4195,
3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,1507,1648,1824,1943,1172,1159,604,
-194,-731,-1212,-661,-868,-1317,-753,321,606,835,462,548,260,365,144,268,611,
249,-152,47,384,97,-290,-592,-299,141,-97,105,437,136,-241,-548,-243,-365,
-91,315,561,821,429,-39,-393,-111,-246,-564,-766,-993,-584,-1088,-1818,-916,208,
1095,386,7521,21669,14942,10448,2791,444,2061,2347,1710,-57,-873,-623,-6727,-8215,-7428,
-5596,-4702,-3406,-1732,-2097,-2462,-1424,-136,1031,530,-379,-1109,-279,-580,36,-329,-1259,
-401,-852,-1624,-2190,-1245,-1424,-2097,-1052,36,-444,186,-322,-1238,-1768,-2297,-1252,-1431,
-594,530,1267,558,859,258,651,1632,766,1159,451,-637,-1403,-658,465,-6956,-22578,
-14770,-9775,-2340,50,-308,966,-150,-587,2935,3437,3406,3692,2675,2454,5829,6226,5327,
4891,4287,3027,1740,1657,859,4195,3996,3106,2159,1683,1930,1934,2146,2137,1340,1304,
1507,1648,1824,1943,1172,1159,604,-194,-731,-1212,-661,-868,-1317,-753,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { 1093,1952,2710,1412,2273,1187,2010,1071,1877,2889,1492,425,1409,
2293,1068,-39,-975,103,1232,16,971,1887,596,-413,-1319,-156,
-1076,19,1060,1711,2569,1161,-9,-918,258,-624,-1626,-2318,-3195,
-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,38309,34378,10290,10530,
16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,-12331,-12493,-9362,-5802,
-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,-4606,-1761,-3944,-6770,
-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,-4412,-1267,-3749,-6062,
-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,-1209,1338,4456,922,
3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,-31222,-7764,-7894,-9576,
-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,18436,17872,16332,16324,
15416,11980,9032,9932,7088,19976,16060,14244,11372,10772,11828,11704,12300,
12048,8972,9568,9832,10148,10492,10620,7660,8204,5804,3304,1532,-192,
1616,-216,-1972,-112,1093,1952,2710,1412,2273,1187,2010,1071,1877,
2889,1492,425,1409,2293,1068,-39,-975,103,1232,16,971,1887,
596,-413,-1319,-156,-1076,19,1060,1711,2569,1161,-9,-918,258,
-624,-1626,-2318,-3195,-1834,-4093,-6276,-2735,188,2559,-546,26355,71492,
38309,34378,10290,10530,16520,17053,13609,7925,5132,6269,-17106,-17170,-16846,
-12331,-12493,-9362,-5802,-8524,-9433,-5373,-1995,1292,-1599,-4100,-6023,-2528,
-4606,-1761,-3944,-6770,-3268,-5750,-7790,-9206,-5367,-7030,-9069,-4834,-1995,
-4412,-1267,-3749,-6062,-7250,-8751,-4704,-6523,-3151,-156,1838,-968,1175,
-1209,1338,4456,922,3449,539,-2372,-4295,-1072,2059,-25791,-75774,-36341,
-31222,-7764,-7894,-9576,-5022,-9219,-8998,4892,3760,5696,6892,4444,5484,
18436,17872,16332,16324,15416,11980,9032,9932,7088,19976,16060,14244,11372,
10772,11828,11704,12300,12048,8972,9568,9832,10148,10492,10620,7660,8204,
5804,3304,1532,-192,1616,-216,-1972,-112,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { 19344,17760,15568,10992,6320,6016,3120,15232,14512,11280,7840,6112,7008,
7024,7792,7760,4864,4736,5472,5984,6624,7056,4256,4208,2192,-704,
-2656,-4400,-2400,-3152,-4784,-2736,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -5206,-3257,-3241,-4107,137,3161,5944,6600,7564,7570,5029,6538,7125,
9097,9250,7741});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = 332;
            expectedEncoder.sCmn.sNSQ.lagPrev = 0;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 295698432;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 255;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 1;
            expectedEncoder.sCmn.prevLag = 0;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7134;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 12;
            expectedEncoder.sCmn.frameCounter = 5;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 0;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 32766;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1779;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 1, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 112;
            expectedEncoder.sCmn.indices.contourIndex = 9;
            expectedEncoder.sCmn.indices.signalType = 2;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 0;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,
-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,
260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,
4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,
2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,
544,343,394,302,204,195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,
-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,
-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,
-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,
-141,-107,-163,-160,-138,-158,-193,-90,-135,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 1;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 1;
            expectedEncoder.sCmn.ec_prevLagIndex = 0;
            expectedEncoder.sCmn.useDTX = 0;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 0;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { -17,5,50,-40,-64,-2,-25,27,17,-16,-72,17,-67,-57,9,-70,0,
-31,-10,-17,23,24,6,-51,-49,4,51,63,26,18,39,-39,2,10,
-31,-84,-16,-18,-58,-4,37,-111,70,26,253,-699,6628,23823,14849,10394,5944,
3198,1035,-800,-1766,-2727,-3009,-3656,-3738,-4061,-4022,-3943,-3882,-3864,-3542,-3603,-3357,-3295,
-3039,-3020,-2722,-2710,-2516,-2341,-2238,-2059,-1966,-1826,-1629,-1526,-1396,-1353,-1222,-1037,-975,
-918,-734,-706,-675,-537,-396,-413,-259,-247,-199,-144,-26,-23,27,217,102,105,
166,220,351,311,319,401,194,1106,-6173,-23505,-14420,-9892,-5499,-2695,-446,1265,2249,
3188,3585,4120,4085,4410,4332,4503,4350,4255,4068,3976,3783,3779,3489,3448,3227,3074,
2836,2811,2523,2296,2316,2098,2050,1855,1671,1540,1426,1307,1272,1077,944,892,808,
773,695,586,503,418,210,255,239,90,83,0,-8,-143,-125,-181,-74,-192,
-354,-255,-58,-1097,6233,23466,14412,9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,
-4574,-4422,-4494,-4271,-4212,-4027,-4122,-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,
-2368,-2131,-1990,-1872,-1752,-1687,-1502,-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,
-416,-483,-313,-199,-126,-147,-97,77,59,42,120,243,260,216,280,-9,1158,
-6284,-23607,-14436,-10062,-5521,-2678,-475,1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,
4366,4124,4001,3830,3737,3517,3421,3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,
1711,1545,1537,1401,1231,1206,1064,919,898,617,649,544,544,343,394,302,204,
195,82,9,20,-91,-106,-141,-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,
-428,-385,-501,-527,-436,-521,-434,-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,
-483,-555,-429,-426,-477,-413,-290,-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,
-211,-338,-330,-288,-255,-274,-208,-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,
-158,-193,-90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 24616;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 253755392, 253755392, 253755392, 135266304 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 5254,-1828,415,-690,759,-494,195,-140,493,-446,-13108,-13108,-13108,-13108,-13108,-13108,5967,
-2169,11,-677,1062,-663,23,10,797,-704,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -128,512,15872,256,-512,-128,512,15872,256,-512,-768,2944,14976,-1536,384,384,256,
1664,384,256});
            expectedControl.LTP_scale_Q14 = 15565;
            expectedControl.pitchL = new Pointer<int>(new int[] { 128, 128, 128, 127 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 6550,-1974,941,-543,242,-165,107,-153,110,-157,145,-161,128,-125,59,-46,6499,
-1909,860,-514,247,-230,146,-139,72,-135,116,-118,63,-72,47,-48,6512,-1878,
833,-494,244,-228,150,-129,67,-130,109,-108,52,-71,54,-64,8512,331,-1560,
-615,258,384,-532,412,-687,871,-353,-386,283,485,-720,258});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 6661,-2045,993,-584,264,-184,121,-177,129,-188,176,-200,162,-160,78,-61,6610,
-1978,908,-552,270,-256,166,-160,85,-162,141,-147,80,-93,62,-64,6622,-1946,
879,-530,267,-254,170,-149,79,-156,133,-134,66,-92,71,-86,8646,345,-1641,
-660,280,428,-604,476,-809,1041,-428,-479,355,624,-942,343});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 835896089, 835896089, 835896089, 834978588 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 17129, 17137, 17128, 14545 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 729, 956, 1092, 1174 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -5804, -6835, -7453, -7824 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2051, 3282, 4021, 4464 });
            expectedControl.Lambda_Q10 = 727;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 0;
            expectedControl.predGain_Q16 = 98204;
            expectedControl.LTPredCodGain_Q7 = 45;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 148571136, 170654848, 148436064, 125340672 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 6, 7, 5, 5 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 238419968, 256901120, 231669760, 47382528 });
            expectedControl.lastGainIndexPrev = 52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_2, xfw_Q3);
        }

        [TestMethod]
        public void Test_silk_encode_frame_internal_20()
        {
            #region autogen
            silk_encoder_state_fix through_psEnc = new silk_encoder_state_fix();
            through_psEnc.sCmn = new silk_encoder_state();
            through_psEnc.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.variable_HP_smth1_Q15 = 193587;
            through_psEnc.sCmn.variable_HP_smth2_Q15 = 193536;
            through_psEnc.sCmn.sLP = new silk_LP_state();
            through_psEnc.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            through_psEnc.sCmn.sLP.transition_frame_no = 0;
            through_psEnc.sCmn.sLP.mode = 0;
            through_psEnc.sCmn.sVAD = new silk_VAD_state();
            through_psEnc.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            through_psEnc.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            through_psEnc.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            through_psEnc.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            through_psEnc.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            through_psEnc.sCmn.sVAD.HPstate = -3;
            through_psEnc.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            through_psEnc.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            through_psEnc.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            through_psEnc.sCmn.sVAD.counter = 21;
            through_psEnc.sCmn.sNSQ = new silk_nsq_state();
            through_psEnc.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            through_psEnc.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            through_psEnc.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            through_psEnc.sCmn.sNSQ.lagPrev = 127;
            through_psEnc.sCmn.sNSQ.sLTP_buf_idx = 240;
            through_psEnc.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            through_psEnc.sCmn.sNSQ.rand_seed = 0;
            through_psEnc.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            through_psEnc.sCmn.sNSQ.rewhite_flag = 0;
            through_psEnc.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            through_psEnc.sCmn.speech_activity_Q8 = 2;
            through_psEnc.sCmn.allow_bandwidth_switch = 0;
            through_psEnc.sCmn.LBRRprevLastGainIndex = 0;
            through_psEnc.sCmn.prevSignalType = 2;
            through_psEnc.sCmn.prevLag = 127;
            through_psEnc.sCmn.pitch_LPC_win_length = 192;
            through_psEnc.sCmn.max_pitch_lag = 144;
            through_psEnc.sCmn.API_fs_Hz = 48000;
            through_psEnc.sCmn.prev_API_fs_Hz = 48000;
            through_psEnc.sCmn.maxInternal_fs_Hz = 16000;
            through_psEnc.sCmn.minInternal_fs_Hz = 8000;
            through_psEnc.sCmn.desiredInternal_fs_Hz = 16000;
            through_psEnc.sCmn.fs_kHz = 8;
            through_psEnc.sCmn.nb_subfr = 4;
            through_psEnc.sCmn.frame_length = 160;
            through_psEnc.sCmn.subfr_length = 40;
            through_psEnc.sCmn.ltp_mem_length = 160;
            through_psEnc.sCmn.la_pitch = 16;
            through_psEnc.sCmn.la_shape = 40;
            through_psEnc.sCmn.shapeWinLength = 120;
            through_psEnc.sCmn.TargetRate_bps = 7100;
            through_psEnc.sCmn.PacketSize_ms = 40;
            through_psEnc.sCmn.PacketLoss_perc = 2;
            through_psEnc.sCmn.frameCounter = 6;
            through_psEnc.sCmn.Complexity = 10;
            through_psEnc.sCmn.nStatesDelayedDecision = 4;
            through_psEnc.sCmn.useInterpolatedNLSFs = 1;
            through_psEnc.sCmn.shapingLPCOrder = 16;
            through_psEnc.sCmn.predictLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationComplexity = 2;
            through_psEnc.sCmn.pitchEstimationLPCOrder = 10;
            through_psEnc.sCmn.pitchEstimationThreshold_Q16 = 45875;
            through_psEnc.sCmn.LTPQuantLowComplexity = 0;
            through_psEnc.sCmn.mu_LTP_Q9 = 15;
            through_psEnc.sCmn.sum_log_gain_Q7 = 83;
            through_psEnc.sCmn.NLSF_MSVQ_Survivors = 32;
            through_psEnc.sCmn.first_frame_after_reset = 0;
            through_psEnc.sCmn.controlled_since_last_payload = 1;
            through_psEnc.sCmn.warping_Q16 = 7864;
            through_psEnc.sCmn.useCBR = 0;
            through_psEnc.sCmn.prefillFlag = 0;
            through_psEnc.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            through_psEnc.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            through_psEnc.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            through_psEnc.sCmn.psNLSF_CB.nVectors = 32;
            through_psEnc.sCmn.psNLSF_CB.order = 10;
            through_psEnc.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            through_psEnc.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            through_psEnc.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            through_psEnc.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            through_psEnc.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            through_psEnc.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            through_psEnc.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            through_psEnc.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            through_psEnc.sCmn.input_tilt_Q15 = 0;
            through_psEnc.sCmn.SNR_dB_Q7 = 1768;
            through_psEnc.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            through_psEnc.sCmn.LBRR_flag = 0;
            through_psEnc.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            through_psEnc.sCmn.indices = new SideInfoIndices();
            through_psEnc.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            through_psEnc.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            through_psEnc.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices.lagIndex = 112;
            through_psEnc.sCmn.indices.contourIndex = 9;
            through_psEnc.sCmn.indices.signalType = 0;
            through_psEnc.sCmn.indices.quantOffsetType = 0;
            through_psEnc.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            through_psEnc.sCmn.indices.PERIndex = 2;
            through_psEnc.sCmn.indices.LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices.Seed = 1;
            through_psEnc.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.arch = 0;
            through_psEnc.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.inputBufIx = 160;
            through_psEnc.sCmn.nFramesPerPacket = 2;
            through_psEnc.sCmn.nFramesEncoded = 0;
            through_psEnc.sCmn.nChannelsAPI = 2;
            through_psEnc.sCmn.nChannelsInternal = 1;
            through_psEnc.sCmn.channelNb = 0;
            through_psEnc.sCmn.frames_since_onset = 0;
            through_psEnc.sCmn.ec_prevSignalType = 2;
            through_psEnc.sCmn.ec_prevLagIndex = 112;
            through_psEnc.sCmn.useDTX = 1;
            through_psEnc.sCmn.inDTX = 0;
            through_psEnc.sCmn.noSpeechCounter = 1;
            through_psEnc.sCmn.useInBandFEC = 1;
            through_psEnc.sCmn.LBRR_enabled = 0;
            through_psEnc.sCmn.LBRR_GainIncreases = 0;
            through_psEnc.sCmn.indices_LBRR[0] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[0].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[0].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[0].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[0].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[1] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[1].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[1].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[1].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[1].Seed = 0;
            through_psEnc.sCmn.indices_LBRR[2] = new SideInfoIndices();
            through_psEnc.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            through_psEnc.sCmn.indices_LBRR[2].lagIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].contourIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].signalType = 0;
            through_psEnc.sCmn.indices_LBRR[2].quantOffsetType = 0;
            through_psEnc.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            through_psEnc.sCmn.indices_LBRR[2].PERIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            through_psEnc.sCmn.indices_LBRR[2].Seed = 0;
            through_psEnc.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            through_psEnc.sShape = new silk_shape_state();
            through_psEnc.sShape.LastGainIndex = 47;
            through_psEnc.sShape.HarmBoost_smth_Q16 = 4695;
            through_psEnc.sShape.HarmShapeGain_smth_Q16 = 17855;
            through_psEnc.sShape.Tilt_smth_Q16 = -31296;
            through_psEnc.sPrefilt = new silk_prefilter_state();
            through_psEnc.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            through_psEnc.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            through_psEnc.sPrefilt.sLTP_shp_buf_idx = 384;
            through_psEnc.sPrefilt.sLF_AR_shp_Q12 = -310601;
            through_psEnc.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            through_psEnc.sPrefilt.sHarmHP_Q2 = -256;
            through_psEnc.sPrefilt.rand_seed = 0;
            through_psEnc.sPrefilt.lagPrev = 127;
            through_psEnc.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            through_psEnc.LTPCorr_Q15 = 24616;
            silk_encoder_control through_sEncCtrl = new silk_encoder_control();
            through_sEncCtrl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            through_sEncCtrl.LTP_scale_Q14 = -858993460;
            through_sEncCtrl.pitchL = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            through_sEncCtrl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.Lambda_Q10 = -858993460;
            through_sEncCtrl.input_quality_Q14 = -858993460;
            through_sEncCtrl.coding_quality_Q14 = -858993460;
            through_sEncCtrl.sparseness_Q8 = -858993460;
            through_sEncCtrl.predGain_Q16 = -858993460;
            through_sEncCtrl.LTPredCodGain_Q7 = -858993460;
            through_sEncCtrl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            through_sEncCtrl.lastGainIndexPrev = -52;
            Pointer<short> in_x_frame = Helpers.WrapWithArrayPointer<short>(
            new short[] { 50,18,-42,-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,
-95,-87,-65,-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,
22,52,-22,79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,
-42,43,-2,16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,
-41,-85,25,-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,
53,-12,34,32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,
-27,-36,-7,30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,
3,12,31,-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,
28,-16,-39,-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,
-85,-50,-76,-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,
393,417,443,550,499,616,540,563,748,758,697,763,820,931,892,999,1104,
1131,1157,1268,1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,
2708,3093,3370,3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,
3480,3540,3247,3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,
-1810,-2538,-3252,-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,
-1668,-1744,-1750,-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,
-3424,-3461,-3483,-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,
-2745,-2639,-2435,-2504,-2013,16384,-132,-24224,-137,-2942,-134,-6309,-145,26933,-142,28062,-137,
14279,-134,16543,-133,23865,-145,-27651,-128,-1820,-138,-15807,-105,29454,-133,22238,-123,15226,
-83,2596,-83,-22977,-80,384,0,17079,-5,-25149,16,-256,-1,0,0,127,0,
239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,24616,0,0,0,0,0,-3072,2,-3072,2,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,25600,0,25600,0,25600,0,25600,
0,0,0,5000,0,2500,0,1600,0,1200,0,-29256,6,7025,13,31457,20,
20097,27,50,0,25,0,16,0,12,0,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            in_x_frame = in_x_frame.Point(500);
            #endregion
            int in_condCoding = 0;
            Pointer<short> res_pitch = Pointer.Malloc<short>(through_psEnc.sCmn.la_pitch + through_psEnc.sCmn.frame_length + through_psEnc.sCmn.ltp_mem_length);
            Pointer<short> res_pitch_frame = res_pitch.Point(through_psEnc.sCmn.ltp_mem_length);
            find_pitch_lags.silk_find_pitch_lags_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            silk_encoder_state_fix expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 0;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 4695;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 17855;
            expectedEncoder.sShape.Tilt_smth_Q16 = -31296;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            silk_encoder_control expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = -858993460;
            expectedControl.coding_quality_Q14 = -858993460;
            expectedControl.sparseness_Q8 = -858993460;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            noise_shape_analysis.silk_noise_shape_analysis_FIX(through_psEnc, through_sEncCtrl, res_pitch_frame, in_x_frame, through_psEnc.sCmn.arch);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 1750, 3677, 6206, 8313, 12235, 14804, 19328, 22400, 25728, 28800, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 83;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 2;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1649;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 2313;
            expectedEncoder.sShape.Tilt_smth_Q16 = -18318;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 7414620, 6514963, 5928781, 5684575 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { -13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,-13108,
-13108,-13108,-13108});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2335,3171,2419,-1213,-199,957,512,-427,-1055,-8,545,-275,37,90,-369,135,708,
3101,2067,-839,-561,1516,1580,-78,-1196,-271,764,-3,-698,338,-144,-210,-891,553,
455,-146,-411,56,734,1054,-351,-163,184,-142,-238,544,-325,108,19,-1162,-499,
371,372,274,150,208,-545,58,566,-78,153,-165,-227,158});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2370,3280,2555,-1302,-220,1065,581,-491,-1239,-11,665,-342,46,117,-483,181,715,
3210,2183,-900,-617,1684,1792,-87,-1406,-327,930,-1,-883,435,-189,-281,-909,572,
480,-156,-450,61,830,1218,-413,-195,224,-176,-303,701,-426,144,21,-1203,-527,
398,406,305,169,242,-641,68,690,-97,194,-212,-298,211});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 896453222, 896453222, 896453222, 896453222 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 13900, 15315, 17315, 17364 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 824, 614, 488, 412 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -6333, -5438, -4901, -4579 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2678, 1607, 964, 578 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 94;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = -858993460;
            expectedControl.ResNrg = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            find_pred_coefs.silk_find_pred_coefs_FIX(through_psEnc, through_sEncCtrl, res_pitch, in_x_frame, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 250, 5376, 8448, 11392, 14592, 17536, 20736, 23552, 26752, 29440, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 3, 4, 4, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 47;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1649;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 2313;
            expectedEncoder.sShape.Tilt_smth_Q16 = -18318;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 7414620, 6514963, 5928781, 5684575 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 1037,509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108,1037,
509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2335,3171,2419,-1213,-199,957,512,-427,-1055,-8,545,-275,37,90,-369,135,708,
3101,2067,-839,-561,1516,1580,-78,-1196,-271,764,-3,-698,338,-144,-210,-891,553,
455,-146,-411,56,734,1054,-351,-163,184,-142,-238,544,-325,108,19,-1162,-499,
371,372,274,150,208,-545,58,566,-78,153,-165,-227,158});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2370,3280,2555,-1302,-220,1065,581,-491,-1239,-11,665,-342,46,117,-483,181,715,
3210,2183,-900,-617,1684,1792,-87,-1406,-327,930,-1,-883,435,-189,-281,-909,572,
480,-156,-450,61,830,1218,-413,-195,224,-176,-303,701,-426,144,21,-1203,-527,
398,406,305,169,242,-641,68,690,-97,194,-212,-298,211});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 896453222, 896453222, 896453222, 896453222 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 13900, 15315, 17315, 17364 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 824, 614, 488, 412 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -6333, -5438, -4901, -4579 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2678, 1607, 964, 578 });
            expectedControl.Lambda_Q10 = -858993460;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 94;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 184627200, 92438528, 117194752, 75694080 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { -858993460, -858993460, -858993460, -858993460 });
            expectedControl.lastGainIndexPrev = -52;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            process_gains.silk_process_gains_FIX(through_psEnc, through_sEncCtrl, in_condCoding);
            #region autogen
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 250, 5376, 8448, 11392, 14592, 17536, 20736, 23552, 26752, 29440, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 43, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 31;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1649;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 2313;
            expectedEncoder.sShape.Tilt_smth_Q16 = -18318;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-4,-36,10,-31,7,-33,60,53,63,11,-4,-95,-87,-65,
-32,35,-41,-144,-55,-45,-34,54,18,-13,17,65,-16,33,22,52,-22,
79,70,30,37,-24,-60,3,-51,6,-28,48,44,67,-44,-42,43,-2,
16,-40,-6,-53,-2,56,-19,25,0,32,52,-46,7,45,-41,-85,25,
-4,67,8,22,56,-29,41,-25,-12,48,57,66,7,-21,53,-12,34,
32,-20,-36,57,110,142,7,63,-10,-25,-46,10,22,30,-27,-36,-7,
30,-41,-59,-2,-25,21,123,-6,-43,20,21,-8,-50,-28,3,12,31,
-14,20,15,61,-46,-2,-49,-95,-33,46,-25,1,44,44,28,-16,-39,
-9,14,-5,-17,-94,-84,-61,-72,-78,5,12,-33,-83,7,-85,-50,-76,
-56,-9,-67,-75,-71,-83,-94,-94,-113,-86,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -8634368,-8937120,-8719230,-9443493,-9279179,-8950370,-8767545,-8699745,-9478855,-8350723,-8980252,-6831551,-8686834,
-8038690,-5424262,-5436892,-5200321});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 384;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -310601;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = 1088963;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -256;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 127;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 71827456, 38273024, 20316160, 10813440 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 1037,509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108,1037,
509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2335,3171,2419,-1213,-199,957,512,-427,-1055,-8,545,-275,37,90,-369,135,708,
3101,2067,-839,-561,1516,1580,-78,-1196,-271,764,-3,-698,338,-144,-210,-891,553,
455,-146,-411,56,734,1054,-351,-163,184,-142,-238,544,-325,108,19,-1162,-499,
371,372,274,150,208,-545,58,566,-78,153,-165,-227,158});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2370,3280,2555,-1302,-220,1065,581,-491,-1239,-11,665,-342,46,117,-483,181,715,
3210,2183,-900,-617,1684,1792,-87,-1406,-327,930,-1,-883,435,-189,-281,-909,572,
480,-156,-450,61,830,1218,-413,-195,224,-176,-303,701,-426,144,21,-1203,-527,
398,406,305,169,242,-641,68,690,-97,194,-212,-298,211});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 896453222, 896453222, 896453222, 896453222 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 13900, 15315, 17315, 17364 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 824, 614, 488, 412 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -6333, -5438, -4901, -4579 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2678, 1607, 964, 578 });
            expectedControl.Lambda_Q10 = 1096;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 94;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 184627200, 92438528, 117194752, 75694080 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 12255232, 9451776, 9751808, 8497664 });
            expectedControl.lastGainIndexPrev = 47;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Pointer<int> xfw_Q3 = Pointer.Malloc<int>(through_psEnc.sCmn.frame_length);
            prefilter.silk_prefilter_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_x_frame);
            #region autogen
            int[] expected_xfw_Q3_1 =
            new int[] { 4433,4927,4391,4614,3941,4783,4978,4701,4831,5562,4971,4878,4987,
4286,3912,3736,3615,5204,4882,4062,4493,3783,3894,3760,3913,3644,
3644,3637,2935,3477,3265,2557,2577,2850,2413,1917,1892,1821,1373,
1902,991,1357,718,700,1446,6762,11790,10110,7188,5102,4172,3430,
2373,1718,1807,728,375,274,-715,-630,-1455,-1403,-1217,-1021,-1511,
-1798,-1741,-1472,-2671,-2264,-2209,-2845,-3137,-3345,-2198,-2339,-3025,-3318,
-3248,-2665,-1937,-1561,-1014,-1135,-1416,-1302,-1846,-1602,-1704,-1368,-2098,
-767,-1116,-441,-278,-327,-870,-631,-581,-946,-201,-346,-651,-129,
-913,-670,-292,-1070,66,55,-445,-675,361,445,68,-517,-343,
-361,-65,-123,74,-26,171,196,576,40,236,-367,-438,-483,
-915,-243,35,195,-420,-507,-463,-175,9,-141,-97,364,489,
19,-545,-114,342,221,-13,322,-164,-306,-841,-102,99,-208,
-91,-621,-1001,-428};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 250, 5376, 8448, 11392, 14592, 17536, 20736, 23552, 26752, 29440, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 43, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 31;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1649;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 2313;
            expectedEncoder.sShape.Tilt_smth_Q16 = -18318;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-54,-126,-77,-11,-26,13,-12,-105,-38,-21,39,-2,28,43,
-12,-67,0,58,43,-13,-17,3,-19,-54,-61,-50,28,8,-27,-110,-55,
-48,-38,38,16,85,38,35,11,25,14,23,-13,-11,-30,48,98,86,
-41,-8,57,61,-77,25,-20,-47,55,-6,36,58,-30,19,18,-5,68,
81,66,-13,40,-118,-21,-54,-27,-42,35,27,65,84,20,-27,27,-43,
-52,-14,75,89,-63,-48,-22,48,28,-39,94,43,17,32,71,19,-41,
-82,-13,-63,14,-22,-29,50,-23,-7,46,45,15,82,29,-51,-84,-35,
2,-21,57,4,28,-61,-27,-30,-40,-1,33,-13,-31,34,37,-41,37,
14,-6,17,-16,-16,-44,34,-27,69,96,-115,-104,-82,-35,52,37,56,
140,62,68,129,125,38,146,145,229,189,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -294912,-1933191,-1150222,-910,142199,386920,-1195163,-1179517,546773,-19514,548503,248015,305057,
-1303029,8113,1165027,149569});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 224;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -217241;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -219989;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -97;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 71827456, 38273024, 20316160, 10813440 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 1037,509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108,1037,
509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2335,3171,2419,-1213,-199,957,512,-427,-1055,-8,545,-275,37,90,-369,135,708,
3101,2067,-839,-561,1516,1580,-78,-1196,-271,764,-3,-698,338,-144,-210,-891,553,
455,-146,-411,56,734,1054,-351,-163,184,-142,-238,544,-325,108,19,-1162,-499,
371,372,274,150,208,-545,58,566,-78,153,-165,-227,158});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2370,3280,2555,-1302,-220,1065,581,-491,-1239,-11,665,-342,46,117,-483,181,715,
3210,2183,-900,-617,1684,1792,-87,-1406,-327,930,-1,-883,435,-189,-281,-909,572,
480,-156,-450,61,830,1218,-413,-195,224,-176,-303,701,-426,144,21,-1203,-527,
398,406,305,169,242,-641,68,690,-97,194,-212,-298,211});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 896453222, 896453222, 896453222, 896453222 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 13900, 15315, 17315, 17364 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 824, 614, 488, 412 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -6333, -5438, -4901, -4579 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2678, 1607, 964, 578 });
            expectedControl.Lambda_Q10 = 1096;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 94;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 184627200, 92438528, 117194752, 75694080 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 12255232, 9451776, 9751808, 8497664 });
            expectedControl.lastGainIndexPrev = 47;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_1, xfw_Q3);
            encode_frame.silk_LBRR_encode_FIX(through_psEnc, through_sEncCtrl, xfw_Q3, in_condCoding);
            #region autogen
            int[] expected_xfw_Q3_2 =
            new int[] { 4433,4927,4391,4614,3941,4783,4978,4701,4831,5562,4971,4878,4987,
4286,3912,3736,3615,5204,4882,4062,4493,3783,3894,3760,3913,3644,
3644,3637,2935,3477,3265,2557,2577,2850,2413,1917,1892,1821,1373,
1902,991,1357,718,700,1446,6762,11790,10110,7188,5102,4172,3430,
2373,1718,1807,728,375,274,-715,-630,-1455,-1403,-1217,-1021,-1511,
-1798,-1741,-1472,-2671,-2264,-2209,-2845,-3137,-3345,-2198,-2339,-3025,-3318,
-3248,-2665,-1937,-1561,-1014,-1135,-1416,-1302,-1846,-1602,-1704,-1368,-2098,
-767,-1116,-441,-278,-327,-870,-631,-581,-946,-201,-346,-651,-129,
-913,-670,-292,-1070,66,55,-445,-675,361,445,68,-517,-343,
-361,-65,-123,74,-26,171,196,576,40,236,-367,-438,-483,
-915,-243,35,195,-420,-507,-463,-175,9,-141,-97,364,489,
19,-545,-114,342,221,-13,322,-164,-306,-841,-102,99,-208,
-91,-621,-1001,-428};
            expectedEncoder = new silk_encoder_state_fix();
            expectedEncoder.sCmn = new silk_encoder_state();
            expectedEncoder.sCmn.In_HP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.variable_HP_smth1_Q15 = 193587;
            expectedEncoder.sCmn.variable_HP_smth2_Q15 = 193536;
            expectedEncoder.sCmn.sLP = new silk_LP_state();
            expectedEncoder.sCmn.sLP.In_LP_State = new Pointer<int>(new int[] { 0, 0 });
            expectedEncoder.sCmn.sLP.transition_frame_no = 0;
            expectedEncoder.sCmn.sLP.mode = 0;
            expectedEncoder.sCmn.sVAD = new silk_VAD_state();
            expectedEncoder.sCmn.sVAD.AnaState = new Pointer<int>(new int[] { 124420, 4752 });
            expectedEncoder.sCmn.sVAD.AnaState1 = new Pointer<int>(new int[] { -19274, -17253 });
            expectedEncoder.sCmn.sVAD.AnaState2 = new Pointer<int>(new int[] { 42959, -62249 });
            expectedEncoder.sCmn.sVAD.XnrgSubfr = new Pointer<int>(new int[] { 10, 19, 197, 607 });
            expectedEncoder.sCmn.sVAD.NrgRatioSmth_Q8 = new Pointer<int>(new int[] { 39948, 52027, 50508, 33962 });
            expectedEncoder.sCmn.sVAD.HPstate = -3;
            expectedEncoder.sCmn.sVAD.NL = new Pointer<int>(new int[] { 693, 326, 512, 1875 });
            expectedEncoder.sCmn.sVAD.inv_NL = new Pointer<int>(new int[] { 3095954, 6580295, 4186387, 1144888 });
            expectedEncoder.sCmn.sVAD.NoiseLevelBias = new Pointer<int>(new int[] { 50, 25, 16, 12 });
            expectedEncoder.sCmn.sVAD.counter = 21;
            expectedEncoder.sCmn.sNSQ = new silk_nsq_state();
            expectedEncoder.sCmn.sNSQ.xq = new Pointer<short>(new short[] { -606,-500,24,-24,-215,-506,-656,-237,-533,-1235,-544,367,1114,680,7805,24484,15748,
9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,-5232,-4018,-2382,-2637,-2119,-1047,-1482,
-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,-1572,-2530,-1823,-1898,-2229,-2230,-916,
-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,-1421,-1477,-552,693,1530,1020,1382,
718,1078,1784,1002,1434,650,-338,-912,-253,743,-6776,-24915,-15265,-10357,-3602,-775,-836,
542,-230,916,3663,3598,3438,3138,2276,2935,6135,6283,5758,5338,4681,3114,1678,1376,
1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,771,863,926,1178,1611,1853,1198,
1095,885,479,209,-96,-327,-433,-304,-229,-99,-62,-54,-12,-132,-287,-416,-421,
-343,-98,169,447,1010,1735,3179,2509,1804,775,151,133,-311,-604,-909,-999,-850,
-977,-849,-636,-316,-257,-147,-134,-606,-500,24,-24,-215,-506,-656,-237,-533,-1235,
-544,367,1114,680,7805,24484,15748,9674,2575,10,1870,-1613,-3239,-4676,-4699,-3614,-5405,
-5232,-4018,-2382,-2637,-2119,-1047,-1482,-1923,-568,-2783,-2963,-3452,-4319,-4339,-2999,-2759,-1623,
-1572,-2530,-1823,-1898,-2229,-2230,-916,-1004,-1675,-798,32,-579,64,-418,-1124,-1637,-2226,
-1421,-1477,-552,693,1530,1020,1382,718,1078,1784,1002,1434,650,-338,-912,-253,743,
-6776,-24915,-15265,-10357,-3602,-775,-836,542,-230,916,3663,3598,3438,3138,2276,2935,6135,
6283,5758,5338,4681,3114,1678,1376,1083,4031,3263,2249,1240,1067,1295,1179,1549,1340,
771,863,926,1178,1611,1853,1198,1095,885,479,209,-96,-327,-433,-304,-229,-99,
-62,-54,-12,-132,-287,-416,-421,-343,-98,169,447,1010,1735,3179,2509,1804,775,
151,133,-311,-604,-909,-999,-850,-977,-849,-636,-316,-257,-147,-134,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sLTP_shp_Q14 = new Pointer<int>(new int[] { -1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,-8863,-2162,2840,6727,
1268,59152,173462,67350,51592,7387,13867,36423,8107,4033,-4518,-3437,5162,
-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,1136,-21236,-16925,-23326,
-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,-29952,-30140,-20336,-24152,
-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,-23503,-25727,-18070,-10442,
-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,-10630,-12723,-5782,1031,
-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,-26403,-4251,-9080,-6938,
-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,9030,11263,11600,37147,
27336,23539,17540,19528,22140,22275,25708,23877,19915,22023,22361,24691,27602,
28972,23659,24143,21182,18042,16236,14912,14728,14006,15664,15408,14584,13552,
12940,12052,10038,8766,8052,8712,9506,10750,11246,11278,13464,16094,22970,
9878,1002,-3770,-1822,4532,2692,1922,336,2490,5144,3054,2826,4670,
6560,4838,3426,2376,-1385,-1025,2228,142,-1197,-3445,-3970,-477,-4098,
-8863,-2162,2840,6727,1268,59152,173462,67350,51592,7387,13867,36423,8107,
4033,-4518,-3437,5162,-15620,-10934,-6236,1046,-6848,-4420,514,-6383,-9782,
1136,-21236,-16925,-23326,-29119,-30800,-22403,-25566,-18212,-22302,-30309,-24418,-27206,
-29952,-30140,-20336,-24152,-29093,-21413,-16659,-22808,-16055,-21274,-24842,-27757,-30999,
-23503,-25727,-18070,-10442,-5692,-10720,-5827,-11200,-5249,90,-5677,405,-5857,
-10630,-12723,-5782,1031,-60039,-188850,-87465,-77211,-30354,-29052,-34473,-28748,-36874,
-26403,-4251,-9080,-6938,-7966,-10318,-1486,24683,23850,23877,23933,22852,14448,
9030,11263,11600,37147,27336,23539,17540,19528,22140,22275,25708,23877,19915,
22023,22361,24691,27602,28972,23659,24143,21182,18042,16236,14912,14728,14006,
15664,15408,14584,13552,12940,12052,10038,8766,8052,8712,9506,10750,11246,
11278,13464,16094,22970,9878,1002,-3770,-1822,4532,2692,1922,336,2490,
5144,3054,2826,4670,6560,4838,3426,2376,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedEncoder.sCmn.sNSQ.sLPC_Q14 = new Pointer<int>(new int[] { -788,-492,-428,-96,-1046,-2282,-3300,-3340,-2726,-778,1338,3550,8016,
13774,25234,19918,14318,6150,1198,1056,-2468,-4798,-7212,-7934,-6744,-7754,
-6738,-5050,-2508,-2038,-1170,-1064,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.sNSQ.sAR2_Q14 = new Pointer<int>(new int[] { -1462,-2698,-4257,-7641,-8640,-8383,-7501,-6587,-1453,2424,6929,13480,21562,
24966,14547,2902});
            expectedEncoder.sCmn.sNSQ.sLF_AR_shp_Q14 = -908;
            expectedEncoder.sCmn.sNSQ.lagPrev = 127;
            expectedEncoder.sCmn.sNSQ.sLTP_buf_idx = 240;
            expectedEncoder.sCmn.sNSQ.sLTP_shp_buf_idx = 320;
            expectedEncoder.sCmn.sNSQ.rand_seed = 0;
            expectedEncoder.sCmn.sNSQ.prev_gain_Q16 = 135266304;
            expectedEncoder.sCmn.sNSQ.rewhite_flag = 0;
            expectedEncoder.sCmn.prev_NLSFq_Q15 = new Pointer<short>(new short[] { 250, 5376, 8448, 11392, 14592, 17536, 20736, 23552, 26752, 29440, -13108, -13108, -13108, -13108, -13108, -13108 });
            expectedEncoder.sCmn.speech_activity_Q8 = 2;
            expectedEncoder.sCmn.allow_bandwidth_switch = 0;
            expectedEncoder.sCmn.LBRRprevLastGainIndex = 0;
            expectedEncoder.sCmn.prevSignalType = 2;
            expectedEncoder.sCmn.prevLag = 127;
            expectedEncoder.sCmn.pitch_LPC_win_length = 192;
            expectedEncoder.sCmn.max_pitch_lag = 144;
            expectedEncoder.sCmn.API_fs_Hz = 48000;
            expectedEncoder.sCmn.prev_API_fs_Hz = 48000;
            expectedEncoder.sCmn.maxInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.minInternal_fs_Hz = 8000;
            expectedEncoder.sCmn.desiredInternal_fs_Hz = 16000;
            expectedEncoder.sCmn.fs_kHz = 8;
            expectedEncoder.sCmn.nb_subfr = 4;
            expectedEncoder.sCmn.frame_length = 160;
            expectedEncoder.sCmn.subfr_length = 40;
            expectedEncoder.sCmn.ltp_mem_length = 160;
            expectedEncoder.sCmn.la_pitch = 16;
            expectedEncoder.sCmn.la_shape = 40;
            expectedEncoder.sCmn.shapeWinLength = 120;
            expectedEncoder.sCmn.TargetRate_bps = 7100;
            expectedEncoder.sCmn.PacketSize_ms = 40;
            expectedEncoder.sCmn.PacketLoss_perc = 2;
            expectedEncoder.sCmn.frameCounter = 6;
            expectedEncoder.sCmn.Complexity = 10;
            expectedEncoder.sCmn.nStatesDelayedDecision = 4;
            expectedEncoder.sCmn.useInterpolatedNLSFs = 1;
            expectedEncoder.sCmn.shapingLPCOrder = 16;
            expectedEncoder.sCmn.predictLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationComplexity = 2;
            expectedEncoder.sCmn.pitchEstimationLPCOrder = 10;
            expectedEncoder.sCmn.pitchEstimationThreshold_Q16 = 45875;
            expectedEncoder.sCmn.LTPQuantLowComplexity = 0;
            expectedEncoder.sCmn.mu_LTP_Q9 = 15;
            expectedEncoder.sCmn.sum_log_gain_Q7 = 0;
            expectedEncoder.sCmn.NLSF_MSVQ_Survivors = 32;
            expectedEncoder.sCmn.first_frame_after_reset = 0;
            expectedEncoder.sCmn.controlled_since_last_payload = 1;
            expectedEncoder.sCmn.warping_Q16 = 7864;
            expectedEncoder.sCmn.useCBR = 0;
            expectedEncoder.sCmn.prefillFlag = 0;
            expectedEncoder.sCmn.pitch_lag_low_bits_iCDF = new Pointer<byte>(new byte[] { 192,128,64,0,205,154,102,51,0,0,0,0,213,171,128,85,43,0,0,0,224,192,160,128,96,64,32,0,100,40,16,7,3,
1,0,0,128,64,0,0,205,60,0,48,0,32,0,0,232,158,10,0,230,0,0,0,92,202,190,216,182,223,154,226,156,230,
120,236,122,244,204,252,52,3,134,11,136,19,100,25,102,29,74,32,66,39,164,53,249,247,246,245,244,234,210,202,201,200,197,
174,82,59,56,55,54,46,22,12,11,10,9,7,0,0,0,0,64,0,0,0,48,153,75,0,52,153,75,0,243,221,192,181,
0,0,0,0,0,0,0,0,64,31,0,0,184,36,0,0,236,44,0,0,188,52,0,0,92,68,0,0,168,97,0,0,128,
56,1,0,0,0,0,0,40,35,0,0,224,46,0,0,164,56,0,0,68,72,0,0,180,95,0,0,172,138,0,0,128,56,
1,0,0,0,0,0,4,41,0,0,176,54,0,0,104,66,0,0,252,83,0,0,84,111,0,0,16,164,0,0,128,56,1,
0,18,0,29,0,38,0,40,0,46,0,52,0,62,0,84,0,100,0,240,0,32,0,100,0,10,103,242,14,86,205,228,29,
10,103,242,14,117,82,130,12,89,154,4,25,117,82,130,12,70,17,49,10,237,3,98,20,70,17,49,10,218,2,215,7,249,
198,173,15,218,2,215,7,34,182,82,5,218,250,164,10,34,182,82,5,70,243,46,30,43,227,75,14,31,102,128,24,28,44,
29,10,218,97,72,18,237,156,244,6,236,48,19,11,227,144,165,4,237,164,29,2,10,223,107,3,203,150,0,0,215,195,166,
125,110,82,0,0,0,0,0,0,72,101,108,112,101,114,115,46,65,115,115,101,114,116,83,105,108,107,69,110,99,83,116,97,
116,101,69,113,117,97,108,115,40,101,120,112,101,99,116,101,100,69,110,99,111,100,101,114,44,32,116,104,114,111,117,103,104,
95,112,115,69,110,99,41,59,10,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,100,0,101,0,99,0,111,0,100,0,101,0,114,0,95,0,115,0,101,0,116,0,95,0,102,0,115,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,
0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,0,32,0,52,0,32,0,124,0,124,0,32,0,112,0,
115,0,68,0,101,0,99,0,45,0,62,0,110,0,98,0,95,0,115,0,117,0,98,0,102,0,114,0,32,0,61,0,61,
0,32,0,52,0,47,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,
68,0,101,0,99,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,102,0,
114,0,97,0,109,0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,32,0,60,0,61,0,32,0,40,0,32,
0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,
0,32,0,62,0,32,0,48,0,32,0,38,0,38,0,32,0,76,0,32,0,60,0,61,0,32,0,40,0,32,0,40,0,
32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,41,0,0,0,0,
0});
            expectedEncoder.sCmn.pitch_contour_iCDF = new Pointer<byte>(new byte[] { 188,176,155,138,119,97,67,43,26,10,0,0,165,119,80,61,47,35,27,20,14,9,4,0,113,63,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,99,0,0,52,173,75,0,60,173,75,0,76,173,
75,0,108,173,75,0,116,173,75,0,132,173,75,0,16,48,0,0,164,173,75,0,208,173,75,0,32,174,75,0,192,174,75,
0,200,174,75,0,216,174,75,0,8,16,32,0,71,56,43,30,21,12,6,0,199,165,144,124,109,96,84,71,61,51,42,32,
23,15,8,0,241,225,211,199,187,175,164,153,142,132,123,114,105,96,88,80,72,64,57,50,44,38,33,29,24,20,16,12,9,
5,2,0,15,131,138,138,155,155,173,173,69,93,115,118,131,138,141,138,150,150,155,150,155,160,166,160,131,128,134,141,141,141,
145,145,145,150,155,155,155,155,160,160,160,160,166,166,173,173,182,192,182,192,192,192,205,192,205,224,4,6,24,7,5,0,0,
2,0,0,12,28,41,13,252,247,15,42,25,14,1,254,62,41,247,246,37,65,252,3,250,4,66,7,248,16,14,38,253,33,
0,0,0,0,13,22,39,23,12,255,36,64,27,250,249,10,55,43,17,1,1,8,1,1,6,245,74,53,247,244,55,76,244,
8,253,3,93,27,252,26,39,59,3,248,2,0,77,11,9,248,22,44,250,7,40,9,26,3,9,249,20,101,249,4,3,248,
42,26,0,241,33,68,2,23,254,55,46,254,15,3,255,21,16,41,250,27,61,39,5,245,42,88,4,1,254,60,65,6,252,
255,251,73,56,1,247,19,94,29,247,0,12,99,6,4,8,237,102,46,243,3,2,13,3,2,9,235,84,72,238,245,46,104,
234,8,18,38,48,23,0,240,70,83,235,11,5,245,117,22,248,250,23,117,244,3,3,248,95,28,4,246,15,77,60,241,255,
4,124,2,252,3,38,84,24,231,2,13,42,13,31,21,252,56,46,255,255,35,79,243,19,249,65,88,247,242,20,4,81,49,
227,20,0,75,3,239,5,247,44,92,248,1,253,22,69,31,250,95,41,244,5,39,67,16,252,1,0,250,120,55,220,243,44,
122,4,232,81,5,11,3,7,2,0,9,10,88,46,2,90,87,93,91,82,98,109,120,118,12,113,115,117,119,99,59,87,111,
63,111,112,80,126,124,125,124,129,121,126,23,132,127,127,127,126,127,122,133,130,134,101,118,119,145,126,86,124,120,123,119,170,
173,107,109,35,114,101,103,105,111,110,32,97,117,116,111,103,101,110,10,0,0,0,0,0,0,0,0,80,111,105,110,116,101,
114,60,105,110,116,62,32,120,102,119,95,81,51,32,61,32,80,111,105,110,116,101,114,46,77,97,108,108,111,99,60,105,110,
116,62,40,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,102,114,97,109,101,95,108,101,110,103,116,
104,41,59,10,0,0,0,0,48,117,0,0,112,23,0,0,32,209,255,255,32,209,255,255,0,0,0,0,0,0,0,0,40,
0,32,0,40,0,32,0,53,0,32,0,42,0,32,0,52,0,32,0,41,0,32,0,42,0,32,0,49,0,54,0,32,0,
41,0,32,0,62,0,61,0,32,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,
0,101,0,95,0,108,0,101,0,110,0,103,0,116,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,118,0,97,0,100,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,112,0,115,0,69,0,110,0,99,0,67,0,45,0,62,0,102,0,114,0,97,0,109,0,101,0,95,
0});
            expectedEncoder.sCmn.psNLSF_CB = new silk_NLSF_CB_struct();
            expectedEncoder.sCmn.psNLSF_CB.nVectors = 32;
            expectedEncoder.sCmn.psNLSF_CB.order = 10;
            expectedEncoder.sCmn.psNLSF_CB.quantStepSize_Q16 = 11796;
            expectedEncoder.sCmn.psNLSF_CB.invQuantStepSize_Q6 = 356;
            expectedEncoder.sCmn.psNLSF_CB.CB1_NLSF_Q8 = new Pointer<byte>(new byte[] { 12,35,60,83,108,132,157,180,206,228,15,32,55,77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,
72,97,120,147,172,200,223,26,44,69,90,114,135,159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,
142,168,196,222,19,24,62,82,100,120,145,168,190,214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,
224,30,49,75,97,121,142,165,186,209,229,19,25,52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,
56,70,91,113,143,165,196,223,21,34,51,72,97,117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,
117,146,168,196,222,24,33,51,77,116,134,158,180,200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,
204,225,27,34,65,95,108,129,155,174,210,225,20,26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,
29,54,97,124,138,163,179,209,229,30,38,56,89,118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,
133,158,179,196,215,232,29,47,74,99,124,151,176,198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,
188,208,227,24,30,52,84,131,150,166,186,203,229,37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,
61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,
161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,
34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,
132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,
152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,
138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,
168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,
0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,
17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,
236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,
255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,
0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,
97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,
70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,
114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,
116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,
0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0});
            expectedEncoder.sCmn.psNLSF_CB.CB1_iCDF = new Pointer<byte>(new byte[] { 212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,34,31,30,21,12,10,3,1,0,255,
245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,28,20,19,18,12,11,5,0,16,0,
0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,84,36,
116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,187,187,
219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,138,214,
143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,134,100,
102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,3,2,
1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,236,183,
82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,0,255,
255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,162,
255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,65,
55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,101,
95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,111,
117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,110,
95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,104,
41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,81,
0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,
0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,
105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,
0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,
116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,
0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,
0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,58,
0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,
117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,
0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,
115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,
0});
            expectedEncoder.sCmn.psNLSF_CB.pred_Q8 = new Pointer<byte>(new byte[] { 179,138,140,148,151,149,153,151,163,116,67,82,59,92,72,100,89,92,0,0,12,35,60,83,108,132,157,180,206,228,15,32,55,
77,101,125,151,175,201,225,19,42,66,89,114,137,162,184,209,230,12,25,50,72,97,120,147,172,200,223,26,44,69,90,114,135,
159,180,205,225,13,22,53,80,106,130,156,180,205,228,15,25,44,64,90,115,142,168,196,222,19,24,62,82,100,120,145,168,190,
214,22,31,50,79,103,120,151,170,203,227,21,29,45,65,106,124,150,171,196,224,30,49,75,97,121,142,165,186,209,229,19,25,
52,70,93,116,143,166,192,219,26,34,62,75,97,118,145,167,194,217,25,33,56,70,91,113,143,165,196,223,21,34,51,72,97,
117,145,171,196,222,20,29,50,67,90,117,144,168,197,221,22,31,48,66,95,117,146,168,196,222,24,33,51,77,116,134,158,180,
200,224,21,28,70,87,106,124,149,170,194,217,26,33,53,64,83,117,152,173,204,225,27,34,65,95,108,129,155,174,210,225,20,
26,72,99,113,131,154,176,200,219,34,43,61,78,93,114,155,177,205,229,23,29,54,97,124,138,163,179,209,229,30,38,56,89,
118,129,158,178,200,231,21,29,49,63,85,111,142,163,193,222,27,48,77,103,133,158,179,196,215,232,29,47,74,99,124,151,176,
198,220,237,33,42,61,76,93,121,155,174,207,225,29,53,87,112,136,154,170,188,208,227,24,30,52,84,131,150,166,186,203,229,
37,48,64,84,104,118,156,177,201,230,212,178,148,129,108,96,85,82,79,77,61,59,57,56,51,49,48,45,42,41,40,38,36,
34,31,30,21,12,10,3,1,0,255,245,244,236,233,225,217,203,190,176,175,161,149,136,125,114,102,91,81,71,60,52,43,35,
28,20,19,18,12,11,5,0,16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,
176,102,68,68,34,65,85,68,84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,
185,170,244,216,187,187,170,244,187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,
169,184,185,170,164,216,223,218,138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,
139,116,185,219,185,138,100,100,134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,
218,219,139,255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,
194,71,10,2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,
255,254,236,173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,
221,255,255,255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,
73,57,62,104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,
3,0,205,1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,
111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,
115,69,110,99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,
95,102,114,97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,
46,115,67,109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,
102,184,126,51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,
0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,
110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_sel = new Pointer<byte>(new byte[] { 16,0,0,0,0,99,66,36,36,34,36,34,34,34,34,83,69,36,52,34,116,102,70,68,68,176,102,68,68,34,65,85,68,
84,36,116,141,152,139,170,132,187,184,216,137,132,249,168,185,139,104,102,100,68,68,178,218,185,185,170,244,216,187,187,170,244,
187,187,219,138,103,155,184,185,137,116,183,155,152,136,132,217,184,184,170,164,217,171,155,139,244,169,184,185,170,164,216,223,218,
138,214,143,188,218,168,244,141,136,155,170,168,138,220,219,139,164,219,202,216,137,168,186,246,185,139,116,185,219,185,138,100,100,
134,100,102,34,68,68,100,68,168,203,221,218,168,167,154,136,104,70,164,246,171,137,139,137,155,218,219,139,255,254,253,238,14,
3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,2,1,0,255,252,
236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,173,95,37,7,1,
0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,
66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,
123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,
105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,
112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,
114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,
105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,
99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,
0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,
62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,
0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,
118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,
0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,
110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,
0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,
0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,
0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,
99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,
0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,
116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,
0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_iCDF = new Pointer<byte>(new byte[] { 255,254,253,238,14,3,2,1,0,255,254,252,218,35,3,2,1,0,255,254,250,208,59,4,2,1,0,255,254,246,194,71,10,
2,1,0,255,252,236,183,82,8,2,1,0,255,252,235,180,90,17,2,1,0,255,248,224,171,97,30,4,1,0,255,254,236,
173,95,37,7,1,0,255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,
255,255,162,73,34,66,162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,
104,210,255,255,251,123,65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,
1,0,0,110,111,105,115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,
101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,
99,44,32,116,104,114,111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,
97,109,101,44,32,105,110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,
109,110,46,97,114,99,104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,
51,115,0,0,0,0,81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,
0,120,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,
114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,
0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,
50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,
0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,
115,0,105,0,108,0,107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,
45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,
0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,
0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,
0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,
32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,
0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,
112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,
0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,
101,0,114,0,32,0,61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,
0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,
54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,
0});
            expectedEncoder.sCmn.psNLSF_CB.ec_Rates_Q5 = new Pointer<byte>(new byte[] { 255,255,255,131,6,145,255,255,255,255,255,236,93,15,96,255,255,255,255,255,194,83,25,71,221,255,255,255,255,162,73,34,66,
162,255,255,255,210,126,73,43,57,173,255,255,255,201,125,71,48,58,130,255,255,255,166,110,73,57,62,104,210,255,255,251,123,
65,55,68,100,171,255,250,0,3,0,6,0,3,0,3,0,3,0,4,0,3,0,3,0,3,0,205,1,0,0,110,111,105,
115,101,95,115,104,97,112,101,95,97,110,97,108,121,115,105,115,46,115,105,108,107,95,110,111,105,115,101,95,115,104,97,112,
101,95,97,110,97,108,121,115,105,115,95,70,73,88,40,116,104,114,111,117,103,104,95,112,115,69,110,99,44,32,116,104,114,
111,117,103,104,95,115,69,110,99,67,116,114,108,44,32,114,101,115,95,112,105,116,99,104,95,102,114,97,109,101,44,32,105,
110,95,120,95,102,114,97,109,101,44,32,116,104,114,111,117,103,104,95,112,115,69,110,99,46,115,67,109,110,46,97,114,99,
104,41,59,10,0,0,0,0,0,0,0,0,0,0,0,0,0,184,126,154,121,154,121,102,102,184,126,51,115,0,0,0,0,
81,0,114,0,101,0,115,0,32,0,62,0,32,0,48,0,0,0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,
0,32,0,48,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,
108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,
0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,
53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,
0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,
107,0,92,0,112,0,108,0,99,0,46,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,
80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,62,0,61,0,32,0,49,0,48,0,0,0,0,0,0,
0,0,0,0,0,0,0,105,0,100,0,120,0,32,0,62,0,61,0,32,0,48,0,0,0,0,0,0,0,0,0,99,0,
58,0,92,0,117,0,115,0,101,0,114,0,115,0,92,0,108,0,111,0,103,0,97,0,110,0,92,0,100,0,111,0,99,
0,117,0,109,0,101,0,110,0,116,0,115,0,92,0,118,0,105,0,115,0,117,0,97,0,108,0,32,0,115,0,116,0,
117,0,100,0,105,0,111,0,32,0,50,0,48,0,49,0,53,0,92,0,112,0,114,0,111,0,106,0,101,0,99,0,116,
0,115,0,92,0,99,0,111,0,110,0,99,0,101,0,110,0,116,0,117,0,115,0,92,0,111,0,112,0,117,0,115,0,
45,0,102,0,105,0,120,0,92,0,115,0,105,0,108,0,107,0,92,0,99,0,110,0,103,0,46,0,99,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,0,100,0,120,0,32,0,60,0,61,0,32,0,50,0,53,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
0,115,0,68,0,101,0,99,0,45,0,62,0,76,0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,
61,0,61,0,32,0,49,0,48,0,32,0,124,0,124,0,32,0,112,0,115,0,68,0,101,0,99,0,45,0,62,0,76,
0,80,0,67,0,95,0,111,0,114,0,100,0,101,0,114,0,32,0,61,0,61,0,32,0,49,0,54,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,115,0,68,0,101,0,99,0,45,0,62,
0,112,0,114,0,101,0,118,0,95,0,103,0,97,0,105,0,110,0,95,0,81,0,49,0,54,0,32,0,33,0,61,0,
32,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,58,0,92,0,117,0,115,0,101,0,114,0,115,
0});
            expectedEncoder.sCmn.psNLSF_CB.deltaMin_Q15 = new Pointer<short>(new short[] { 250,3,6,3,3,3,4,3,3,3,461,0,28526,29545,24421,26739,28769,
24421,28257,27745,29561,29545,29486,27753,24427,28526,29545,24421,26739,28769,24421,28257,27745,29561,
29545,18015,22601,29736,29288,30063,26727,28767,17779,25454,8236,26740,28530,26485,24424,17779,25454,
29763,27762,8236,25970,24435,26992,25460,24424,29286,28001,11365,26912,24430,24440,29286,28001,11365,
29728,29288,30063,26727,28767,17779,25454,29486,27971,11886,29281,26723,15145,10,0,0,0,
0,0,0,32440,31130,31130,26214,32440,29491,0,0,81,114,101,115,32,62,
32,48,0,0,0,0,105,100,120,32,62,32,48,0,0,0,0,
0,99,58,92,117,115,101,114,115,92,108,111,103,97,110,92,100,
111,99,117,109,101,110,116,115,92,118,105,115,117,97,108,32,115,
116,117,100,105,111,32,50,48,49,53,92,112,114,111,106,101,99,
116,115,92,99,111,110,99,101,110,116,117,115,92,111,112,117,115,
45,102,105,120,92,115,105,108,107,92,112,108,99,46,99,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
115,68,101,99,45,62,76,80,67,95,111,114,100,101,114,32,62,
61,32,49,48,0,0,0,0,0,0,105,100,120,32,62,61,32,
48,0,0,0,0,99,58,92,117,115,101,114,115,92,108,111,103,
97,110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,
97,108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,
111,106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,
111,112,117,115,45,102,105,120,92,115,105,108,107,92,99,110,103,
46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,105,100,120,32,60,61,32,50,53,53,0,0,0,0,
0,0,112,115,68,101,99,45,62,76,80,67,95,111,114,100,101,
114,32,61,61,32,49,48,32,124,124,32,112,115,68,101,99,45,
62,76,80,67,95,111,114,100,101,114,32,61,61,32,49,54,0,
0,0,0,0,0,0,0,0,0,0,0,112,115,68,101,99,45,
62,112,114,101,118,95,103,97,105,110,95,81,49,54,32,33,61,
32,48,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,100,101,99,111,100,101,95,99,111,114,101,46,99,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
105,110,118,95,103,97,105,110,95,81,51,49,32,33,61,32,48,
0,0,0,0,0,115,116,97,114,116,95,105,100,120,32,62,32,
48,0,0,0,0,0,9872,0,-25727,0,1746,14986,-26453,0,6854,25769,-9994,
0,0,0,237,0,153,0,73,0,30,0,12,0,7,0,16384,0,
23955,0,28861,0,31213,0,32178,0,32548,0,16384,0,8812,0,3906,0,1554,
0,589,0,219,0,0,0,0,0,0,0,0,0,100,32,62,61,
32,54,0,0,99,58,92,117,115,101,114,115,92,108,111,103,97,
110,92,100,111,99,117,109,101,110,116,115,92,118,105,115,117,97,
108,32,115,116,117,100,105,111,32,50,48,49,53,92,112,114,111,
106,101,99,116,115,92,99,111,110,99,101,110,116,117,115,92,111,
112,117,115,45,102,105,120,92,115,105,108,107,92,108,112,99,95,
97,110,97,108,121,115,105,115,95,102,105,108,116,101,114,46,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,40,100,32,38,32,49,41,32,61,61,32,48,
0,0,0,0,100,32,60,61,32,108,101,110,0,0,0,0,100,
32,60,61,32,49,54,0,0,0,114,99,95,109,117,108,116,49,
95,81,51,48,32,62,32,40,32,49,32,60,60,32,49,53,32,
41,0,0,0,0,0,0,0,0,99,58,92,117,115,101,114,115,
92,108,111,103,97,110,92,100,111,99,117,109,101,110,116,115,92,
118,105,115,117,97,108,32,115,116,117,100,105,111,32,50,48,49,
53,92,112,114,111,106,101,99,116,115,92,99,111,110,99,101,110,
116,117,115,92,111,112,117,115,45,102,105,120,92,115,105,108,107,
92,108,112,99,95,105,110,118,95,112,114,101,100,95,103,97,105,
110,46,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,114,99,95,109,117,108,116,49,95,81,51,
48,32,60,61,32,40,32,49,32,60,60,32,51,48,32,41,0,
0,0,0,0});
            expectedEncoder.sCmn.input_quality_bands_Q15 = new Pointer<int>(new int[] { 26097, 27474, 27474, 25179 });
            expectedEncoder.sCmn.input_tilt_Q15 = 0;
            expectedEncoder.sCmn.SNR_dB_Q7 = 1768;
            expectedEncoder.sCmn.VAD_flags = new Pointer<sbyte>(new sbyte[] { 0, 1, 0 });
            expectedEncoder.sCmn.LBRR_flag = 0;
            expectedEncoder.sCmn.LBRR_flags = new Pointer<int>(new int[] { 0, 0, 0 });
            expectedEncoder.sCmn.indices = new SideInfoIndices();
            expectedEncoder.sCmn.indices.GainsIndices = new Pointer<sbyte>(new sbyte[] { 43, 0, 0, 0 });
            expectedEncoder.sCmn.indices.LTPIndex = new Pointer<sbyte>(new sbyte[] { 16, 16, 13, 7 });
            expectedEncoder.sCmn.indices.NLSFIndices = new Pointer<sbyte>(new sbyte[] { 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices.lagIndex = 0;
            expectedEncoder.sCmn.indices.contourIndex = 0;
            expectedEncoder.sCmn.indices.signalType = 0;
            expectedEncoder.sCmn.indices.quantOffsetType = 1;
            expectedEncoder.sCmn.indices.NLSFInterpCoef_Q2 = 4;
            expectedEncoder.sCmn.indices.PERIndex = 2;
            expectedEncoder.sCmn.indices.LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices.Seed = 1;
            expectedEncoder.sCmn.pulses = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.arch = 0;
            expectedEncoder.sCmn.inputBuf = new Pointer<short>(new short[] { -90,-135,-41,-116,-73,-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,
-22,15,-89,-5,-104,-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,
-25,120,55,-8,10,15,43,-53,25,86,45,14,30,-37,-4,-56,-11,
-101,91,-32,75,63,43,-30,26,-7,-34,61,22,-13,83,-67,2,31,
-91,78,43,-26,-25,106,55,14,-37,-1,1,29,-18,25,11,26,23,
68,-5,28,-45,-41,-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,
38,37,-25,-75,3,64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,
-108,-18,64,46,7,-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,
18,17,-28,-32,-90,-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,
-83,-19,20,-112,-24,-30,26,2,24,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.inputBufIx = 160;
            expectedEncoder.sCmn.nFramesPerPacket = 2;
            expectedEncoder.sCmn.nFramesEncoded = 0;
            expectedEncoder.sCmn.nChannelsAPI = 2;
            expectedEncoder.sCmn.nChannelsInternal = 1;
            expectedEncoder.sCmn.channelNb = 0;
            expectedEncoder.sCmn.frames_since_onset = 0;
            expectedEncoder.sCmn.ec_prevSignalType = 2;
            expectedEncoder.sCmn.ec_prevLagIndex = 112;
            expectedEncoder.sCmn.useDTX = 1;
            expectedEncoder.sCmn.inDTX = 0;
            expectedEncoder.sCmn.noSpeechCounter = 1;
            expectedEncoder.sCmn.useInBandFEC = 1;
            expectedEncoder.sCmn.LBRR_enabled = 0;
            expectedEncoder.sCmn.LBRR_GainIncreases = 0;
            expectedEncoder.sCmn.indices_LBRR[0] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[0].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[0].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[0].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[0].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[0].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[1] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[1].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[1].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[1].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[1].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[1].Seed = 0;
            expectedEncoder.sCmn.indices_LBRR[2] = new SideInfoIndices();
            expectedEncoder.sCmn.indices_LBRR[2].GainsIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].LTPIndex = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].NLSFIndices = new Pointer<sbyte>(new sbyte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 });
            expectedEncoder.sCmn.indices_LBRR[2].lagIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].contourIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].signalType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].quantOffsetType = 0;
            expectedEncoder.sCmn.indices_LBRR[2].NLSFInterpCoef_Q2 = 0;
            expectedEncoder.sCmn.indices_LBRR[2].PERIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].LTP_scaleIndex = 0;
            expectedEncoder.sCmn.indices_LBRR[2].Seed = 0;
            expectedEncoder.sCmn.pulses_LBRR[0] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[1] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sCmn.pulses_LBRR[2] = new Pointer<sbyte>(new sbyte[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            expectedEncoder.sShape = new silk_shape_state();
            expectedEncoder.sShape.LastGainIndex = 31;
            expectedEncoder.sShape.HarmBoost_smth_Q16 = 1649;
            expectedEncoder.sShape.HarmShapeGain_smth_Q16 = 2313;
            expectedEncoder.sShape.Tilt_smth_Q16 = -18318;
            expectedEncoder.sPrefilt = new silk_prefilter_state();
            expectedEncoder.sPrefilt.sLTP_shp = new Pointer<short>(new short[] { -1911,-1500,-1477,-928,-826,-256,-13,614,918,1482,2036,2710,3689,3809,7358,6809,22282,
7305,-757,435,302,188,325,533,421,527,477,645,635,743,712,856,915,869,
1124,1256,1376,1531,1673,1757,1900,2003,2145,2414,2486,2646,2792,2941,3115,3361,3373,
3635,3588,3715,4013,3923,4095,4090,4252,4075,4284,4082,4127,3950,3891,3618,3590,3047,
2837,2244,1902,1188,531,-404,-1344,-2364,-4129,-5018,-8744,-8470,-22497,-6787,1113,60,269,
161,97,143,-15,-93,-183,-281,-152,-375,-487,-502,-667,-758,-877,-893,-1129,-1136,
-1305,-1499,-1604,-1645,-1887,-2008,-2093,-2310,-2515,-2594,-2815,-2883,-3059,-3167,-3199,-3302,-3321,
-3331,-3466,-3235,-3443,-3220,-3375,-3208,-3411,-3058,-3160,-2830,-2624,-2370,-2059,-1501,-1146,-291,
307,1208,2323,3336,5113,5937,9756,9217,22811,7187,-818,260,-19,103,-138,25,0,
-61,-29,4,-78,-31,7,20,-50,35,10,4,36,34,-4,-49,-70,-14,
-5,10,-40,-21,-58,2,-95,2,-45,-92,30,-76,-26,0,28,-35,8,
-48,-56,51,8,6,-19,69,-50,-93,-17,25,48,-62,-44,-32,-28,7,
-39,-76,20,-21,40,11,-56,22,-17,0,-34,-48,-115,-69,50,18,-42,
-10,36,-28,-54,-126,-77,-11,-26,13,-12,-105,-38,-21,39,-2,28,43,
-12,-67,0,58,43,-13,-17,3,-19,-54,-61,-50,28,8,-27,-110,-55,
-48,-38,38,16,85,38,35,11,25,14,23,-13,-11,-30,48,98,86,
-41,-8,57,61,-77,25,-20,-47,55,-6,36,58,-30,19,18,-5,68,
81,66,-13,40,-118,-21,-54,-27,-42,35,27,65,84,20,-27,27,-43,
-52,-14,75,89,-63,-48,-22,48,28,-39,94,43,17,32,71,19,-41,
-82,-13,-63,14,-22,-29,50,-23,-7,46,45,15,82,29,-51,-84,-35,
2,-21,57,4,28,-61,-27,-30,-40,-1,33,-13,-31,34,37,-41,37,
14,-6,17,-16,-16,-44,34,-27,69,96,-115,-104,-82,-35,52,37,56,
140,62,68,129,125,38,146,145,229,189,266,318,408,388,393,417,443,
550,499,616,540,563,748,758,697,763,820,931,892,999,1104,1131,1157,1268,
1323,1394,1458,1583,1612,1692,1858,1891,2058,2176,2173,2449,2512,2689,2708,3093,3370,
3489,3636,3614,3727,3843,3765,3836,3880,3857,3848,3956,3877,3775,3688,3480,3540,3247,
3190,2904,2821,2537,2397,2055,1956,1294,1165,630,388,-298,-658,-1320,-1810,-2538,-3252,
-3880,-5287,-5803,-9623,-9703,-23532,-8048,75,-1322,-1074,-1233,-1267,-1327,-1508,-1668,-1744,-1750,
-1983,-2121,-2145,-2265,-2386,-2644,-2629,-2661,-2871,-3024,-3030,-3145,-3262,-3351,-3424,-3461,-3483,
-3578,-3710,-3686,-3701,-3699,-3663,-3756,-3650,-3586,-3540,-3356,-3208,-3007,-3013,-2745,-2639,-2435,
-2504,-2013});
            expectedEncoder.sPrefilt.sAR_shp = new Pointer<int>(new int[] { -294912,-1933191,-1150222,-910,142199,386920,-1195163,-1179517,546773,-19514,548503,248015,305057,
-1303029,8113,1165027,149569});
            expectedEncoder.sPrefilt.sLTP_shp_buf_idx = 224;
            expectedEncoder.sPrefilt.sLF_AR_shp_Q12 = -217241;
            expectedEncoder.sPrefilt.sLF_MA_shp_Q12 = -219989;
            expectedEncoder.sPrefilt.sHarmHP_Q2 = -97;
            expectedEncoder.sPrefilt.rand_seed = 0;
            expectedEncoder.sPrefilt.lagPrev = 0;
            expectedEncoder.x_buf = new Pointer<short>(new short[] { 239,90,83,0,-8,-143,-125,-181,-74,-192,-354,-255,-58,-1097,6233,23466,14412,
9913,5536,2671,545,-1258,-2249,-3243,-3505,-4210,-4224,-4574,-4422,-4494,-4271,-4212,-4027,-4122,
-3878,-3691,-3519,-3452,-3217,-3097,-2917,-2791,-2616,-2450,-2368,-2131,-1990,-1872,-1752,-1687,-1502,
-1323,-1238,-1175,-1089,-992,-872,-754,-750,-645,-451,-416,-483,-313,-199,-126,-147,-97,
77,59,42,120,243,260,216,280,-9,1158,-6284,-23607,-14436,-10062,-5521,-2678,-475,
1251,2263,3195,3478,4057,4160,4506,4349,4431,4243,4366,4124,4001,3830,3737,3517,3421,
3190,3131,2839,2723,2606,2491,2398,2135,1963,1854,1711,1545,1537,1401,1231,1206,1064,
919,898,617,649,544,544,343,394,302,204,195,82,9,20,-91,-106,-141,
-168,-249,-238,-238,-288,-366,-319,-403,-431,-501,-428,-385,-501,-527,-436,-521,-434,
-497,-492,-506,-498,-461,-482,-527,-536,-446,-538,-483,-555,-429,-426,-477,-413,-290,
-397,-355,-281,-388,-410,-419,-471,-232,-308,-385,-211,-338,-330,-288,-255,-274,-208,
-189,-273,-134,-169,-232,-141,-107,-163,-160,-138,-158,-193,-90,-135,-41,-116,-73,
-119,-160,-128,-62,-16,-67,12,7,-65,-57,24,-78,-22,15,-89,-5,-104,
-64,-13,31,-15,13,56,74,-77,70,56,-23,-13,-25,120,55,-8,10,
15,43,-53,25,86,45,14,30,-37,-4,-56,-11,-101,91,-32,75,63,
43,-30,26,-7,-34,61,22,-13,83,-67,2,31,-91,78,43,-26,-25,
106,55,14,-37,-1,1,29,-18,25,11,26,23,68,-5,28,-45,-41,
-37,-82,6,34,32,-62,-61,-43,8,22,-12,-10,38,37,-25,-75,3,
64,31,-20,21,-30,-34,-92,17,41,-13,-18,-81,-108,-18,64,46,7,
-119,2,-12,18,17,-18,-4,-14,-37,0,75,22,18,17,-28,-32,-90,
-54,-82,98,-75,-137,109,48,21,-21,80,-54,9,-83,-19,20,-112,-24,
-30,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0});
            expectedEncoder.LTPCorr_Q15 = 0;
            expectedControl = new silk_encoder_control();
            expectedControl.Gains_Q16 = new Pointer<int>(new int[] { 71827456, 38273024, 20316160, 10813440 });
            expectedControl.PredCoef_Q12 = new Pointer<short>(new short[] { 1037,509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108,1037,
509,568,255,498,279,458,182,371,-82,-13108,-13108,-13108,-13108,-13108,-13108});
            expectedControl.LTPCoef_Q14 = new Pointer<short>(new short[] { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0});
            expectedControl.LTP_scale_Q14 = -858993460;
            expectedControl.pitchL = new Pointer<int>(new int[] { 0, 0, 0, 0 });
            expectedControl.AR1_Q13 = new Pointer<short>(new short[] { 2335,3171,2419,-1213,-199,957,512,-427,-1055,-8,545,-275,37,90,-369,135,708,
3101,2067,-839,-561,1516,1580,-78,-1196,-271,764,-3,-698,338,-144,-210,-891,553,
455,-146,-411,56,734,1054,-351,-163,184,-142,-238,544,-325,108,19,-1162,-499,
371,372,274,150,208,-545,58,566,-78,153,-165,-227,158});
            expectedControl.AR2_Q13 = new Pointer<short>(new short[] { 2370,3280,2555,-1302,-220,1065,581,-491,-1239,-11,665,-342,46,117,-483,181,715,
3210,2183,-900,-617,1684,1792,-87,-1406,-327,930,-1,-883,435,-189,-281,-909,572,
480,-156,-450,61,830,1218,-413,-195,224,-176,-303,701,-426,144,21,-1203,-527,
398,406,305,169,242,-641,68,690,-97,194,-212,-298,211});
            expectedControl.LF_shp_Q14 = new Pointer<int>(new int[] { 896453222, 896453222, 896453222, 896453222 });
            expectedControl.GainsPre_Q14 = new Pointer<int>(new int[] { 13900, 15315, 17315, 17364 });
            expectedControl.HarmBoost_Q14 = new Pointer<int>(new int[] { 824, 614, 488, 412 });
            expectedControl.Tilt_Q14 = new Pointer<int>(new int[] { -6333, -5438, -4901, -4579 });
            expectedControl.HarmShapeGain_Q14 = new Pointer<int>(new int[] { 2678, 1607, 964, 578 });
            expectedControl.Lambda_Q10 = 1096;
            expectedControl.input_quality_Q14 = 13392;
            expectedControl.coding_quality_Q14 = 3105;
            expectedControl.sparseness_Q8 = 94;
            expectedControl.predGain_Q16 = 366118;
            expectedControl.LTPredCodGain_Q7 = 0;
            expectedControl.ResNrg = new Pointer<int>(new int[] { 184627200, 92438528, 117194752, 75694080 });
            expectedControl.ResNrgQ = new Pointer<int>(new int[] { 10, 10, 10, 10 });
            expectedControl.GainsUnq_Q16 = new Pointer<int>(new int[] { 12255232, 9451776, 9751808, 8497664 });
            expectedControl.lastGainIndexPrev = 47;
            #endregion
            Helpers.AssertSilkEncStateEquals(expectedEncoder, through_psEnc);
            Helpers.AssertSilkEncControlEquals(expectedControl, through_sEncCtrl);
            Helpers.AssertArrayDataEquals(expected_xfw_Q3_2, xfw_Q3);
        }
    }
}
